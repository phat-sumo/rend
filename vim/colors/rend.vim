
"""
" Name: rend.vim
"""

set background=dark
hi clear

if exists('syntax on')
syntax reset
endif

let g:colors_name='rend'
set t_Co=256

" Color definitions
let s:white         = [255, "#fbf5f3"]
let s:light_gray    = [250, "#bcbcbc"]
let s:dark_gray     = [232, "#090909"]
let s:black         = [16,  "#030303"]
let s:pink          = [204, "#fe3198"]
let s:mint          = [50,  "#00fbc3"]
let s:yellow        = [220, "#eed202"]
let s:violet        = [92,  "#731dd8"]
let s:teal          = [45,  "#0fd7ff"]
let s:none          = ["NONE", ""]

" func
function! s:Color(name, fg, bg, style)
  execute "hi " . a:name . " ctermfg=" . a:fg[0] . " ctermbg=" . a:bg[0] " cterm=" . a:style
  if a:fg[1] != ""
    execute "hi " . a:name . " guifg=" . a:fg[1]
  endif
  if a:bg[1] != ""
    execute "hi " . a:name . " guibg=" . a:bg[1]
  endif
  execute "hi " . a:name . " gui=" . a:style
endfun

" javascript

call s:Color("javaScriptLineComment", s:light_gray, s:black, "NONE")
call s:Color("javaScriptCommentSkip", s:white, s:black, "NONE")
call s:Color("javaScriptComment", s:light_gray, s:black, "NONE")
call s:Color("javaScriptSpecial", s:white, s:black, "NONE")
call s:Color("javaScriptStringD", s:mint, s:black, "NONE")
call s:Color("javaScriptStringS", s:mint, s:black, "NONE")
call s:Color("javaScriptStringT", s:mint, s:black, "NONE")
call s:Color("javaScriptEmbed", s:white, s:black, "NONE")
call s:Color("javaScriptSpecialCharacter", s:white, s:black, "NONE")
call s:Color("javaScriptNumber", s:mint, s:black, "NONE")
call s:Color("javaScriptRegexpString", s:white, s:black, "NONE")
call s:Color("javaScriptFunction", s:pink, s:black, "NONE")
call s:Color("javaScriptFunctionFold", s:white, s:black, "NONE")
call s:Color("javaScriptBraces", s:white, s:black, "NONE")
call s:Color("javaScriptParens", s:white, s:black, "NONE")
call s:Color("javaScriptCommentTodo", s:yellow, s:black, "NONE")
call s:Color("javaScriptCharacter", s:mint, s:black, "NONE")
call s:Color("javaScriptConditional", s:pink, s:black, "NONE")
call s:Color("javaScriptRepeat", s:teal, s:black, "NONE")
call s:Color("javaScriptBranch", s:white, s:black, "NONE")
call s:Color("javaScriptOperator", s:pink, s:black, "NONE")
call s:Color("javaScriptType", s:white, s:black, "NONE")
call s:Color("javaScriptStatement", s:teal, s:black, "NONE")
call s:Color("javaScriptError", s:white, s:black, "NONE")
call s:Color("javaScrParenError", s:white, s:black, "NONE")
call s:Color("javaScriptNull", s:mint, s:black, "NONE")
call s:Color("javaScriptBoolean", s:mint, s:black, "NONE")
call s:Color("javaScriptIdentifier", s:mint, s:black, "NONE")
call s:Color("javaScriptLabel", s:white, s:black, "NONE")
call s:Color("javaScriptException", s:white, s:black, "NONE")
call s:Color("javaScriptMessage", s:white, s:black, "NONE")
call s:Color("javaScriptGlobal", s:white, s:black, "NONE")
call s:Color("javaScriptMember", s:white, s:black, "NONE")
call s:Color("javaScriptDeprecated", s:white, s:black, "NONE")
call s:Color("javaScriptReserved", s:teal, s:black, "NONE")
call s:Color("javaScriptDebug", s:white, s:black, "NONE")
call s:Color("javaScriptConstant", s:white, s:black, "NONE")

" typescript

call s:Color("typescriptTypeCast", s:white, s:black, "NONE")
call s:Color("typescriptLabel", s:white, s:black, "NONE")
call s:Color("typescriptBlock", s:white, s:black, "NONE")
call s:Color("typescriptIdentifierName", s:white, s:black, "NONE")
call s:Color("typescriptProp", s:white, s:black, "NONE")
call s:Color("typescriptIndexExpr", s:white, s:black, "NONE")
call s:Color("typescriptDotNotation", s:white, s:black, "NONE")
call s:Color("typescriptDotStyleNotation", s:white, s:black, "NONE")
call s:Color("typescriptFuncCall", s:white, s:black, "NONE")
call s:Color("typescriptParenExp", s:white, s:black, "NONE")
call s:Color("typescriptFuncCallArg", s:white, s:black, "NONE")
call s:Color("typescriptEventFuncCallArg", s:white, s:black, "NONE")
call s:Color("typescriptEventString", s:white, s:black, "NONE")
call s:Color("typescriptASCII", s:white, s:black, "NONE")
call s:Color("typescriptTemplateSubstitution", s:white, s:black, "NONE")
call s:Color("typescriptString", s:mint, s:black, "NONE")
call s:Color("typescriptSpecial", s:white, s:black, "NONE")
call s:Color("typescriptRegexpString", s:white, s:black, "NONE")
call s:Color("typescriptTemplate", s:white, s:black, "NONE")
call s:Color("typescriptArray", s:white, s:black, "NONE")
call s:Color("typescriptNumber", s:mint, s:black, "NONE")
call s:Color("typescriptExponent", s:white, s:black, "NONE")
call s:Color("typescriptObjectLiteral", s:white, s:black, "NONE")
call s:Color("typescriptObjectLabel", s:white, s:black, "NONE")
call s:Color("typescriptStringProperty", s:white, s:black, "NONE")
call s:Color("typescriptPropertyName", s:white, s:black, "NONE")
call s:Color("typescriptComputedPropertyName", s:white, s:black, "NONE")
call s:Color("typescriptRestOrSpread", s:white, s:black, "NONE")
call s:Color("typescriptObjectSpread", s:white, s:black, "NONE")
call s:Color("typescriptObjectColon", s:white, s:black, "NONE")
call s:Color("typescriptUnaryOp", s:white, s:black, "NONE")
call s:Color("typescriptTernary", s:white, s:black, "NONE")
call s:Color("typescriptAssign", s:white, s:black, "NONE")
call s:Color("typescriptBinaryOp", s:white, s:black, "NONE")
call s:Color("typescriptVariableDeclaration", s:white, s:black, "NONE")
call s:Color("typescriptEnum", s:white, s:black, "NONE")
call s:Color("typescriptLoopParen", s:white, s:black, "NONE")
call s:Color("typescriptConditionalParen", s:white, s:black, "NONE")
call s:Color("typescriptEndColons", s:white, s:black, "NONE")
call s:Color("shellbang", s:white, s:black, "NONE")
call s:Color("typescriptLineComment", s:light_gray, s:black, "NONE")
call s:Color("typescriptComment", s:light_gray, s:black, "NONE")
call s:Color("typescriptRef", s:white, s:black, "NONE")
call s:Color("typescriptDocComment", s:white, s:black, "NONE")
call s:Color("typescriptDocNotation", s:white, s:black, "NONE")
call s:Color("typescriptDocName", s:white, s:black, "NONE")
call s:Color("typescriptDocEventRef", s:white, s:black, "NONE")
call s:Color("typescriptDocNamedParamType", s:white, s:black, "NONE")
call s:Color("typescriptDocParamName", s:white, s:black, "NONE")
call s:Color("typescriptDocParamType", s:white, s:black, "NONE")
call s:Color("typescriptDocA", s:white, s:black, "NONE")
call s:Color("typescriptDocAs", s:white, s:black, "NONE")
call s:Color("typescriptDocB", s:white, s:black, "NONE")
call s:Color("typescriptDocParam", s:white, s:black, "NONE")
call s:Color("typescriptDocNumParam", s:white, s:black, "NONE")
call s:Color("typescriptDocRef", s:white, s:black, "NONE")
call s:Color("typescriptDocLinkTag", s:white, s:black, "NONE")
call s:Color("typescriptOptionalMark", s:white, s:black, "NONE")
call s:Color("typescriptTypeParameters", s:white, s:black, "NONE")
call s:Color("typescriptTypeParameter", s:white, s:black, "NONE")
call s:Color("typescriptGenericDefault", s:white, s:black, "NONE")
call s:Color("typescriptTypeArguments", s:white, s:black, "NONE")
call s:Color("typescriptTypeBracket", s:white, s:black, "NONE")
call s:Color("typescriptStringLiteralType", s:white, s:black, "NONE")
call s:Color("typescriptParenthesizedType", s:white, s:black, "NONE")
call s:Color("typescriptTypeReference", s:white, s:black, "NONE")
call s:Color("typescriptPredefinedType", s:white, s:black, "NONE")
call s:Color("typescriptObjectType", s:mint, s:black, "NONE")
call s:Color("typescriptTupleType", s:mint, s:black, "NONE")
call s:Color("typescriptUnion", s:white, s:black, "NONE")
call s:Color("typescriptGenericFunc", s:white, s:black, "NONE")
call s:Color("typescriptFuncType", s:white, s:black, "NONE")
call s:Color("typescriptFuncTypeArrow", s:white, s:black, "NONE")
call s:Color("typescriptGenericCall", s:white, s:black, "NONE")
call s:Color("typescriptCall", s:white, s:black, "NONE")
call s:Color("typescriptTypeAnnotation", s:white, s:black, "NONE")
call s:Color("typescriptFuncComma", s:white, s:black, "NONE")
call s:Color("typescriptDefaultParam", s:white, s:black, "NONE")
call s:Color("typescriptIndexSignature", s:white, s:black, "NONE")
call s:Color("typescriptAliasDeclaration", s:white, s:black, "NONE")
call s:Color("typescriptGlobalNumberDot", s:white, s:black, "NONE")
call s:Color("typescriptGlobalStringDot", s:white, s:black, "NONE")
call s:Color("typescriptGlobalArrayDot", s:white, s:black, "NONE")
call s:Color("typescriptGlobalObjectDot", s:white, s:black, "NONE")
call s:Color("typescriptGlobalSymbolDot", s:white, s:black, "NONE")
call s:Color("typescriptGlobalMathDot", s:white, s:black, "NONE")
call s:Color("typescriptGlobalDateDot", s:white, s:black, "NONE")
call s:Color("typescriptGlobalJSONDot", s:white, s:black, "NONE")
call s:Color("typescriptGlobalRegExpDot", s:white, s:black, "NONE")
call s:Color("typescriptGlobalPromiseDot", s:white, s:black, "NONE")
call s:Color("typescriptGlobalURLDot", s:white, s:black, "NONE")
call s:Color("typescriptDOMNodeMethod", s:white, s:black, "NONE")
call s:Color("typescriptMember", s:white, s:black, "NONE")
call s:Color("typescriptMethodAccessor", s:white, s:black, "NONE")
call s:Color("typescriptMemberOptionality", s:white, s:black, "NONE")
call s:Color("typescriptStringMember", s:white, s:black, "NONE")
call s:Color("typescriptComputedMember", s:white, s:black, "NONE")
call s:Color("typescriptClassName", s:white, s:black, "NONE")
call s:Color("typescriptClassTypeParameter", s:white, s:black, "NONE")
call s:Color("typescriptClassHeritage", s:white, s:black, "NONE")
call s:Color("typescriptClassTypeArguments", s:white, s:black, "NONE")
call s:Color("typescriptMixinComma", s:white, s:black, "NONE")
call s:Color("typescriptClassBlock", s:white, s:black, "NONE")
call s:Color("typescriptInterfaceName", s:white, s:black, "NONE")
call s:Color("typescriptInterfaceTypeParameter", s:white, s:black, "NONE")
call s:Color("typescriptInterfaceHeritage", s:white, s:black, "NONE")
call s:Color("typescriptInterfaceTypeArguments", s:white, s:black, "NONE")
call s:Color("typescriptInterfaceComma", s:white, s:black, "NONE")
call s:Color("typescriptAsyncFunc", s:white, s:black, "NONE")
call s:Color("typescriptFuncName", s:white, s:black, "NONE")
call s:Color("typescriptArrowFuncDef", s:white, s:black, "NONE")
call s:Color("typescriptArrowFunc", s:white, s:black, "NONE")
call s:Color("typescriptArrowFuncArg", s:white, s:black, "NONE")
call s:Color("typescriptReturnAnnotation", s:white, s:black, "NONE")
call s:Color("typescriptFuncImpl", s:white, s:black, "NONE")
call s:Color("typescriptGenericImpl", s:white, s:black, "NONE")
call s:Color("typescriptParamImpl", s:white, s:black, "NONE")
call s:Color("typescriptDecorator", s:white, s:black, "NONE")
call s:Color("typescriptGlobal", s:white, s:black, "NONE")
call s:Color("typescriptGlobalMethod", s:white, s:black, "NONE")
call s:Color("typescriptNumberStaticProp", s:white, s:black, "NONE")
call s:Color("typescriptNumberStaticMethod", s:white, s:black, "NONE")
call s:Color("typescriptNumberMethod", s:white, s:black, "NONE")
call s:Color("typescriptStringStaticMethod", s:white, s:black, "NONE")
call s:Color("typescriptStringMethod", s:white, s:black, "NONE")
call s:Color("typescriptArrayStaticMethod", s:pink, s:black, "NONE")
call s:Color("typescriptArrayMethod", s:white, s:black, "NONE")
call s:Color("typescriptObjectStaticMethod", s:pink, s:black, "NONE")
call s:Color("typescriptObjectMethod", s:white, s:black, "NONE")
call s:Color("typescriptSymbolStaticProp", s:white, s:black, "NONE")
call s:Color("typescriptSymbolStaticMethod", s:white, s:black, "NONE")
call s:Color("typescriptFunctionMethod", s:white, s:black, "NONE")
call s:Color("typescriptMathStaticProp", s:white, s:black, "NONE")
call s:Color("typescriptMathStaticMethod", s:white, s:black, "NONE")
call s:Color("typescriptDateStaticMethod", s:white, s:black, "NONE")
call s:Color("typescriptDateMethod", s:white, s:black, "NONE")
call s:Color("typescriptJSONStaticMethod", s:white, s:black, "NONE")
call s:Color("typescriptRegExpStaticProp", s:white, s:black, "NONE")
call s:Color("typescriptRegExpProp", s:white, s:black, "NONE")
call s:Color("typescriptRegExpMethod", s:pink, s:black, "NONE")
call s:Color("typescriptES6MapProp", s:white, s:black, "NONE")
call s:Color("typescriptES6MapMethod", s:white, s:black, "NONE")
call s:Color("typescriptES6SetProp", s:white, s:black, "NONE")
call s:Color("typescriptES6SetMethod", s:pink, s:black, "NONE")
call s:Color("typescriptProxyAPI", s:white, s:black, "NONE")
call s:Color("typescriptPromiseStaticMethod", s:white, s:black, "NONE")
call s:Color("typescriptPromiseMethod", s:white, s:black, "NONE")
call s:Color("typescriptReflectMethod", s:white, s:black, "NONE")
call s:Color("typescriptIntlMethod", s:white, s:black, "NONE")
call s:Color("typescriptNodeGlobal", s:white, s:black, "NONE")
call s:Color("typescriptBOM", s:white, s:black, "NONE")
call s:Color("typescriptBOMWindowProp", s:white, s:black, "NONE")
call s:Color("typescriptBOMWindowMethod", s:white, s:black, "NONE")
call s:Color("typescriptBOMWindowEvent", s:white, s:black, "NONE")
call s:Color("typescriptBOMWindowCons", s:white, s:black, "NONE")
call s:Color("typescriptBOMNavigatorProp", s:white, s:black, "NONE")
call s:Color("typescriptBOMNavigatorMethod", s:white, s:black, "NONE")
call s:Color("typescriptServiceWorkerMethod", s:white, s:black, "NONE")
call s:Color("typescriptBOMLocationProp", s:white, s:black, "NONE")
call s:Color("typescriptBOMLocationMethod", s:pink, s:black, "NONE")
call s:Color("typescriptBOMHistoryProp", s:white, s:black, "NONE")
call s:Color("typescriptBOMHistoryMethod", s:white, s:black, "NONE")
call s:Color("typescriptConsoleMethod", s:white, s:black, "NONE")
call s:Color("typescriptXHRGlobal", s:white, s:black, "NONE")
call s:Color("typescriptXHRProp", s:white, s:black, "NONE")
call s:Color("typescriptXHRMethod", s:pink, s:black, "NONE")
call s:Color("typescriptFileMethod", s:white, s:black, "NONE")
call s:Color("typescriptFileReaderProp", s:white, s:black, "NONE")
call s:Color("typescriptFileReaderMethod", s:white, s:black, "NONE")
call s:Color("typescriptFileListMethod", s:white, s:black, "NONE")
call s:Color("typescriptBlobMethod", s:white, s:black, "NONE")
call s:Color("typescriptURLUtilsProp", s:teal, s:black, "NONE")
call s:Color("typescriptURLStaticMethod", s:white, s:black, "NONE")
call s:Color("typescriptCryptoGlobal", s:white, s:black, "NONE")
call s:Color("typescriptSubtleCryptoMethod", s:white, s:black, "NONE")
call s:Color("typescriptCryptoProp", s:white, s:black, "NONE")
call s:Color("typescriptCryptoMethod", s:white, s:black, "NONE")
call s:Color("typescriptHeadersMethod", s:pink, s:black, "NONE")
call s:Color("typescriptRequestProp", s:white, s:black, "NONE")
call s:Color("typescriptRequestMethod", s:white, s:black, "NONE")
call s:Color("typescriptResponseProp", s:white, s:black, "NONE")
call s:Color("typescriptResponseMethod", s:white, s:black, "NONE")
call s:Color("typescriptServiceWorkerProp", s:white, s:black, "NONE")
call s:Color("typescriptCacheMethod", s:white, s:black, "NONE")
call s:Color("typescriptEncodingGlobal", s:white, s:black, "NONE")
call s:Color("typescriptEncodingProp", s:white, s:black, "NONE")
call s:Color("typescriptEncodingMethod", s:white, s:black, "NONE")
call s:Color("typescriptGeolocationMethod", s:white, s:black, "NONE")
call s:Color("typescriptBOMNetworkProp", s:white, s:black, "NONE")
call s:Color("typescriptPaymentMethod", s:pink, s:black, "NONE")
call s:Color("typescriptPaymentProp", s:white, s:black, "NONE")
call s:Color("typescriptPaymentEvent", s:white, s:black, "NONE")
call s:Color("typescriptPaymentResponseMethod", s:white, s:black, "NONE")
call s:Color("typescriptPaymentResponseProp", s:white, s:black, "NONE")
call s:Color("typescriptPaymentAddressProp", s:white, s:black, "NONE")
call s:Color("typescriptPaymentShippingOptionProp", s:white, s:black, "NONE")
call s:Color("typescriptDOMNodeProp", s:white, s:black, "NONE")
call s:Color("typescriptDOMNodeType", s:white, s:black, "NONE")
call s:Color("typescriptDOMElemAttrs", s:white, s:black, "NONE")
call s:Color("typescriptDOMElemFuncs", s:white, s:black, "NONE")
call s:Color("typescriptDOMDocProp", s:teal, s:black, "NONE")
call s:Color("typescriptDOMDocMethod", s:white, s:black, "NONE")
call s:Color("typescriptDOMEventTargetMethod", s:white, s:black, "NONE")
call s:Color("typescriptDOMEventCons", s:white, s:black, "NONE")
call s:Color("typescriptDOMEventProp", s:white, s:black, "NONE")
call s:Color("typescriptDOMEventMethod", s:pink, s:black, "NONE")
call s:Color("typescriptDOMStorage", s:white, s:black, "NONE")
call s:Color("typescriptDOMStorageProp", s:white, s:black, "NONE")
call s:Color("typescriptDOMStorageMethod", s:white, s:black, "NONE")
call s:Color("typescriptDOMFormProp", s:white, s:black, "NONE")
call s:Color("typescriptDOMFormMethod", s:white, s:black, "NONE")
call s:Color("typescriptDOMStyle", s:white, s:black, "NONE")
call s:Color("typescriptAnimationEvent", s:white, s:black, "NONE")
call s:Color("typescriptCSSEvent", s:white, s:black, "NONE")
call s:Color("typescriptDatabaseEvent", s:white, s:black, "NONE")
call s:Color("typescriptDocumentEvent", s:white, s:black, "NONE")
call s:Color("typescriptDOMMutationEvent", s:white, s:black, "NONE")
call s:Color("typescriptDragEvent", s:white, s:black, "NONE")
call s:Color("typescriptElementEvent", s:white, s:black, "NONE")
call s:Color("typescriptFocusEvent", s:white, s:black, "NONE")
call s:Color("typescriptFormEvent", s:white, s:black, "NONE")
call s:Color("typescriptFrameEvent", s:white, s:black, "NONE")
call s:Color("typescriptInputDeviceEvent", s:white, s:black, "NONE")
call s:Color("typescriptMediaEvent", s:white, s:black, "NONE")
call s:Color("typescriptMenuEvent", s:white, s:black, "NONE")
call s:Color("typescriptNetworkEvent", s:white, s:black, "NONE")
call s:Color("typescriptProgressEvent", s:white, s:black, "NONE")
call s:Color("typescriptResourceEvent", s:white, s:black, "NONE")
call s:Color("typescriptScriptEvent", s:white, s:black, "NONE")
call s:Color("typescriptSensorEvent", s:white, s:black, "NONE")
call s:Color("typescriptSessionHistoryEvent", s:white, s:black, "NONE")
call s:Color("typescriptStorageEvent", s:white, s:black, "NONE")
call s:Color("typescriptSVGEvent", s:white, s:black, "NONE")
call s:Color("typescriptTabEvent", s:white, s:black, "NONE")
call s:Color("typescriptTextEvent", s:white, s:black, "NONE")
call s:Color("typescriptTouchEvent", s:white, s:black, "NONE")
call s:Color("typescriptUpdateEvent", s:white, s:black, "NONE")
call s:Color("typescriptValueChangeEvent", s:white, s:black, "NONE")
call s:Color("typescriptViewEvent", s:white, s:black, "NONE")
call s:Color("typescriptWebsocketEvent", s:white, s:black, "NONE")
call s:Color("typescriptWindowEvent", s:white, s:black, "NONE")
call s:Color("typescriptUncategorizedEvent", s:white, s:black, "NONE")
call s:Color("typescriptServiceWorkerEvent", s:white, s:black, "NONE")
call s:Color("typescriptReserved", s:white, s:black, "NONE")
call s:Color("typescriptSymbols", s:white, s:black, "NONE")
call s:Color("typescriptBraces", s:white, s:black, "NONE")
call s:Color("typescriptParens", s:white, s:black, "NONE")
call s:Color("typescriptCommentTodo", s:white, s:black, "NONE")
call s:Color("typescriptDocTags", s:white, s:black, "NONE")
call s:Color("typescriptDocNGParam", s:white, s:black, "NONE")
call s:Color("typescriptTemplateSB", s:white, s:black, "NONE")
call s:Color("typescriptPrototype", s:white, s:black, "NONE")
call s:Color("typescriptConditional", s:pink, s:black, "NONE")
call s:Color("typescriptConditionalElse", s:white, s:black, "NONE")
call s:Color("typescriptCase", s:white, s:black, "NONE")
call s:Color("typescriptDefault", s:white, s:black, "NONE")
call s:Color("typescriptBranch", s:white, s:black, "NONE")
call s:Color("typescriptIdentifier", s:white, s:black, "NONE")
call s:Color("typescriptVariable", s:mint, s:black, "NONE")
call s:Color("typescriptEnumKeyword", s:white, s:black, "NONE")
call s:Color("typescriptRepeat", s:teal, s:black, "NONE")
call s:Color("typescriptForOperator", s:teal, s:black, "NONE")
call s:Color("typescriptStatementKeyword", s:teal, s:black, "NONE")
call s:Color("typescriptMessage", s:white, s:black, "NONE")
call s:Color("typescriptOperator", s:white, s:black, "NONE")
call s:Color("typescriptKeywordOp", s:white, s:black, "NONE")
call s:Color("typescriptCastKeyword", s:teal, s:black, "NONE")
call s:Color("typescriptType", s:mint, s:black, "NONE")
call s:Color("typescriptNull", s:mint, s:black, "NONE")
call s:Color("typescriptBoolean", s:mint, s:black, "NONE")
call s:Color("typescriptImport", s:teal, s:black, "NONE")
call s:Color("typescriptAmbientDeclaration", s:white, s:black, "NONE")
call s:Color("typescriptExport", s:teal, s:black, "NONE")
call s:Color("typescriptModule", s:white, s:black, "NONE")
call s:Color("typescriptTry", s:white, s:black, "NONE")
call s:Color("typescriptExceptions", s:white, s:black, "NONE")
call s:Color("typescriptAsyncFuncKeyword", s:white, s:black, "NONE")
call s:Color("typescriptAsyncFor", s:white, s:black, "NONE")
call s:Color("typescriptFuncKeyword", s:pink, s:black, "NONE")
call s:Color("typescriptFuncArg", s:white, s:black, "NONE")
call s:Color("typescriptClassKeyword", s:white, s:black, "NONE")
call s:Color("typescriptClassExtends", s:white, s:black, "NONE")
call s:Color("typescriptAbstract", s:white, s:black, "NONE")
call s:Color("typescriptClassStatic", s:white, s:black, "NONE")
call s:Color("typescriptReadonlyModifier", s:white, s:black, "NONE")
call s:Color("typescriptInterfaceKeyword", s:white, s:black, "NONE")
call s:Color("typescriptInterfaceExtends", s:white, s:black, "NONE")
call s:Color("typescriptConstraint", s:white, s:black, "NONE")
call s:Color("typescriptReadonlyArrayKeyword", s:white, s:black, "NONE")
call s:Color("typescriptConstructorType", s:white, s:black, "NONE")
call s:Color("typescriptTypeQuery", s:white, s:black, "NONE")
call s:Color("typescriptAccessibilityModifier", s:white, s:black, "NONE")
call s:Color("typescriptMappedIn", s:white, s:black, "NONE")
call s:Color("typescriptConstructSignature", s:white, s:black, "NONE")
call s:Color("typescriptAliasKeyword", s:white, s:black, "NONE")
call s:Color("typescriptUserDefinedType", s:white, s:black, "NONE")
call s:Color("typescriptConstructor", s:white, s:black, "NONE")

" html

call s:Color("htmlError", s:white, s:black, "NONE")
call s:Color("htmlString", s:mint, s:black, "NONE")
call s:Color("htmlValue", s:white, s:black, "NONE")
call s:Color("htmlEndTag", s:white, s:black, "NONE")
call s:Color("htmlTag", s:white, s:black, "NONE")
call s:Color("htmlTagN", s:white, s:black, "NONE")
call s:Color("htmlTagError", s:white, s:black, "NONE")
call s:Color("htmlTagName", s:teal, s:black, "NONE")
call s:Color("htmlArg", s:pink, s:black, "NONE")
call s:Color("htmlSpecialChar", s:white, s:black, "NONE")
call s:Color("htmlComment", s:light_gray, s:black, "NONE")
call s:Color("htmlCommentError", s:white, s:black, "NONE")
call s:Color("htmlCommentPart", s:light_gray, s:black, "NONE")
call s:Color("htmlPreProc", s:white, s:black, "NONE")
call s:Color("htmlPreStmt", s:white, s:black, "NONE")
call s:Color("htmlPreError", s:white, s:black, "NONE")
call s:Color("htmlPreAttr", s:white, s:black, "NONE")
call s:Color("htmlPreProcAttrError", s:white, s:black, "NONE")
call s:Color("htmlPreProcAttrName", s:white, s:black, "NONE")
call s:Color("htmlStrike", s:white, s:black, "NONE")
call s:Color("htmlBold", s:white, s:black, "NONE")
call s:Color("htmlBoldUnderline", s:white, s:black, "NONE")
call s:Color("htmlBoldItalic", s:white, s:black, "NONE")
call s:Color("htmlBoldUnderlineItalic", s:white, s:black, "NONE")
call s:Color("htmlBoldItalicUnderline", s:white, s:black, "NONE")
call s:Color("htmlUnderline", s:white, s:black, "NONE")
call s:Color("htmlUnderlineBold", s:white, s:black, "NONE")
call s:Color("htmlUnderlineItalic", s:white, s:black, "NONE")
call s:Color("htmlUnderlineItalicBold", s:white, s:black, "NONE")
call s:Color("htmlUnderlineBoldItalic", s:white, s:black, "NONE")
call s:Color("htmlItalic", s:white, s:black, "NONE")
call s:Color("htmlItalicBold", s:white, s:black, "NONE")
call s:Color("htmlItalicBoldUnderline", s:white, s:black, "NONE")
call s:Color("htmlItalicUnderline", s:white, s:black, "NONE")
call s:Color("htmlItalicUnderlineBold", s:white, s:black, "NONE")
call s:Color("htmlLeadingSpace", s:white, s:black, "NONE")
call s:Color("htmlLink", s:white, s:black, "NONE")
call s:Color("htmlH1", s:white, s:black, "NONE")
call s:Color("htmlH2", s:white, s:black, "NONE")
call s:Color("htmlH3", s:white, s:black, "NONE")
call s:Color("htmlH4", s:white, s:black, "NONE")
call s:Color("htmlH5", s:white, s:black, "NONE")
call s:Color("htmlH6", s:white, s:black, "NONE")
call s:Color("htmlHead", s:white, s:black, "NONE")
call s:Color("htmlTitle", s:white, s:black, "NONE")
call s:Color("javaScript", s:white, s:black, "NONE")
call s:Color("htmlScriptTag", s:white, s:black, "NONE")
call s:Color("htmlEvent", s:pink, s:black, "NONE")
call s:Color("htmlEventSQ", s:white, s:black, "NONE")
call s:Color("htmlEventDQ", s:white, s:black, "NONE")
call s:Color("javaScriptExpression", s:white, s:black, "NONE")
call s:Color("cssStyle", s:white, s:black, "NONE")
call s:Color("htmlCssStyleComment", s:white, s:black, "NONE")
call s:Color("htmlCssDefinition", s:white, s:black, "NONE")
call s:Color("htmlStyleArg", s:white, s:black, "NONE")
call s:Color("htmlSpecialTagName", s:white, s:black, "NONE")
call s:Color("htmlSpecial", s:white, s:black, "NONE")
call s:Color("htmlStatement", s:white, s:black, "NONE")

" css

call s:Color("cssTagName", s:pink, s:black, "NONE")
call s:Color("cssSelectorOp", s:white, s:black, "NONE")
call s:Color("cssSelectorOp2", s:white, s:black, "NONE")
call s:Color("cssAttributeSelector", s:teal, s:black, "NONE")
call s:Color("cssClassName", s:white, s:black, "NONE")
call s:Color("cssClassNameDot", s:white, s:black, "NONE")
call s:Color("cssIdentifier", s:white, s:black, "NONE")
call s:Color("cssValueInteger", s:white, s:black, "NONE")
call s:Color("cssValueNumber", s:mint, s:black, "NONE")
call s:Color("cssValueLength", s:mint, s:black, "NONE")
call s:Color("cssValueAngle", s:white, s:black, "NONE")
call s:Color("cssValueTime", s:white, s:black, "NONE")
call s:Color("cssValueFrequency", s:white, s:black, "NONE")
call s:Color("cssColor", s:white, s:black, "NONE")
call s:Color("cssImportant", s:pink, s:black, "NONE")
call s:Color("cssURL", s:white, s:black, "NONE")
call s:Color("cssFunction", s:white, s:black, "NONE")
call s:Color("cssFunctionComma", s:white, s:black, "NONE")
call s:Color("cssAnimationProp", s:white, s:black, "NONE")
call s:Color("cssAnimationAttr", s:white, s:black, "NONE")
call s:Color("cssBackgroundProp", s:white, s:black, "NONE")
call s:Color("cssBackgroundAttr", s:white, s:black, "NONE")
call s:Color("cssBorderProp", s:white, s:black, "NONE")
call s:Color("cssBoxProp", s:white, s:black, "NONE")
call s:Color("cssBoxAttr", s:teal, s:black, "NONE")
call s:Color("cssColorProp", s:white, s:black, "NONE")
call s:Color("cssDimensionProp", s:white, s:black, "NONE")
call s:Color("cssFlexibleBoxProp", s:white, s:black, "NONE")
call s:Color("cssFlexibleBoxAttr", s:white, s:black, "NONE")
call s:Color("cssFontProp", s:white, s:black, "NONE")
call s:Color("cssFontAttr", s:teal, s:black, "NONE")
call s:Color("cssMultiColumnProp", s:white, s:black, "NONE")
call s:Color("cssMultiColumnAttr", s:white, s:black, "NONE")
call s:Color("cssInteractProp", s:white, s:black, "NONE")
call s:Color("cssInteractAttr", s:white, s:black, "NONE")
call s:Color("cssGeneratedContentProp", s:white, s:black, "NONE")
call s:Color("cssGeneratedContentAttr", s:white, s:black, "NONE")
call s:Color("cssGridProp", s:white, s:black, "NONE")
call s:Color("cssHyerlinkProp", s:white, s:black, "NONE")
call s:Color("cssListProp", s:white, s:black, "NONE")
call s:Color("cssListAttr", s:white, s:black, "NONE")
call s:Color("cssPositioningProp", s:white, s:black, "NONE")
call s:Color("cssPositioningAttr", s:teal, s:black, "NONE")
call s:Color("cssTableProp", s:white, s:black, "NONE")
call s:Color("cssTextProp", s:white, s:black, "NONE")
call s:Color("cssTextAttr", s:teal, s:black, "NONE")
call s:Color("cssTransformProp", s:white, s:black, "NONE")
call s:Color("cssTransitionProp", s:white, s:black, "NONE")
call s:Color("cssTransitionAttr", s:white, s:black, "NONE")
call s:Color("cssUIProp", s:white, s:black, "NONE")
call s:Color("cssUIAttr", s:teal, s:black, "NONE")
call s:Color("cssIEUIAttr", s:white, s:black, "NONE")
call s:Color("cssIEUIProp", s:white, s:black, "NONE")
call s:Color("cssAuralProp", s:white, s:black, "NONE")
call s:Color("cssAuralAttr", s:white, s:black, "NONE")
call s:Color("cssMobileTextProp", s:white, s:black, "NONE")
call s:Color("cssMediaProp", s:white, s:black, "NONE")
call s:Color("cssKeyFrameProp", s:white, s:black, "NONE")
call s:Color("cssPageMarginProp", s:white, s:black, "NONE")
call s:Color("cssFontDescriptorProp", s:white, s:black, "NONE")
call s:Color("cssFontDescriptorAttr", s:white, s:black, "NONE")
call s:Color("cssBraces", s:white, s:black, "NONE")
call s:Color("cssError", s:white, s:black, "NONE")
call s:Color("cssDefinition", s:white, s:black, "NONE")
call s:Color("cssBraceError", s:white, s:black, "NONE")
call s:Color("cssAttrComma", s:white, s:black, "NONE")
call s:Color("cssPseudoClass", s:white, s:black, "NONE")
call s:Color("cssPseudoClassId", s:pink, s:black, "NONE")
call s:Color("cssPseudoClassFn", s:white, s:black, "NONE")
call s:Color("cssUnitDecorators", s:white, s:black, "NONE")
call s:Color("cssNoise", s:white, s:black, "NONE")
call s:Color("cssComment", s:white, s:black, "NONE")
call s:Color("cssUnicodeEscape", s:white, s:black, "NONE")
call s:Color("cssSpecialCharQQ", s:white, s:black, "NONE")
call s:Color("cssSpecialCharQ", s:white, s:black, "NONE")
call s:Color("cssStringQQ", s:white, s:black, "NONE")
call s:Color("cssStringQ", s:mint, s:black, "NONE")
call s:Color("cssVendor", s:white, s:black, "NONE")
call s:Color("cssHacks", s:white, s:black, "NONE")
call s:Color("cssAttrRegion", s:teal, s:black, "NONE")
call s:Color("cssAtKeyword", s:white, s:black, "NONE")
call s:Color("cssAtRule", s:white, s:black, "NONE")
call s:Color("cssPagePseudo", s:white, s:black, "NONE")
call s:Color("cssDeprecated", s:white, s:black, "NONE")
call s:Color("cssContentForPagedMediaProp", s:white, s:black, "NONE")
call s:Color("cssLineboxProp", s:white, s:black, "NONE")
call s:Color("cssMarqueeProp", s:white, s:black, "NONE")
call s:Color("cssPagedMediaProp", s:white, s:black, "NONE")
call s:Color("cssPrintProp", s:white, s:black, "NONE")
call s:Color("cssRubyProp", s:white, s:black, "NONE")
call s:Color("cssSpeechProp", s:white, s:black, "NONE")
call s:Color("cssRenderProp", s:white, s:black, "NONE")
call s:Color("cssBorderAttr", s:teal, s:black, "NONE")
call s:Color("cssContentForPagedMediaAttr", s:white, s:black, "NONE")
call s:Color("cssDimensionAttr", s:white, s:black, "NONE")
call s:Color("cssGridAttr", s:white, s:black, "NONE")
call s:Color("cssHyerlinkAttr", s:white, s:black, "NONE")
call s:Color("cssLineboxAttr", s:white, s:black, "NONE")
call s:Color("cssMarginAttr", s:white, s:black, "NONE")
call s:Color("cssMarqueeAttr", s:white, s:black, "NONE")
call s:Color("cssPaddingAttr", s:white, s:black, "NONE")
call s:Color("cssPagedMediaAttr", s:white, s:black, "NONE")
call s:Color("cssGradientAttr", s:white, s:black, "NONE")
call s:Color("cssPrintAttr", s:white, s:black, "NONE")
call s:Color("cssRubyAttr", s:white, s:black, "NONE")
call s:Color("cssSpeechAttr", s:white, s:black, "NONE")
call s:Color("cssTableAttr", s:white, s:black, "NONE")
call s:Color("cssTransformAttr", s:white, s:black, "NONE")
call s:Color("cssRenderAttr", s:white, s:black, "NONE")
call s:Color("cssCommonAttr", s:teal, s:black, "NONE")
call s:Color("cssPseudoClassLang", s:white, s:black, "NONE")
call s:Color("cssFunctionName", s:white, s:black, "NONE")
call s:Color("cssMediaType", s:white, s:black, "NONE")
call s:Color("cssMediaComma", s:white, s:black, "NONE")
call s:Color("cssAtRuleLogical", s:white, s:black, "NONE")
call s:Color("cssMediaAttr", s:white, s:black, "NONE")
call s:Color("cssPageProp", s:white, s:black, "NONE")
call s:Color("cssFontDescriptor", s:white, s:black, "NONE")
call s:Color("cssUnicodeRange", s:white, s:black, "NONE")
call s:Color("cssProp", s:white, s:black, "NONE")
call s:Color("cssAttr", s:white, s:black, "NONE")

" markdown

call s:Color("markdownValid", s:white, s:black, "NONE")
call s:Color("markdownLineStart", s:white, s:black, "NONE")
call s:Color("markdownH1", s:white, s:black, "NONE")
call s:Color("markdownH2", s:white, s:black, "NONE")
call s:Color("markdownHeadingRule", s:white, s:black, "NONE")
call s:Color("markdownH3", s:white, s:black, "NONE")
call s:Color("markdownH4", s:white, s:black, "NONE")
call s:Color("markdownH5", s:white, s:black, "NONE")
call s:Color("markdownH6", s:white, s:black, "NONE")
call s:Color("markdownBlockquote", s:white, s:black, "NONE")
call s:Color("markdownCodeBlock", s:white, s:black, "NONE")
call s:Color("markdownListMarker", s:mint, s:black, "NONE")
call s:Color("markdownOrderedListMarker", s:white, s:black, "NONE")
call s:Color("markdownRule", s:white, s:black, "NONE")
call s:Color("markdownLineBreak", s:white, s:black, "NONE")
call s:Color("markdownIdDeclaration", s:white, s:black, "NONE")
call s:Color("markdownUrl", s:white, s:black, "NONE")
call s:Color("markdownUrlTitle", s:white, s:black, "NONE")
call s:Color("markdownLinkText", s:white, s:black, "NONE")
call s:Color("markdownLink", s:white, s:black, "NONE")
call s:Color("markdownId", s:white, s:black, "NONE")
call s:Color("markdownAutomaticLink", s:white, s:black, "NONE")
call s:Color("markdownItalic", s:white, s:black, "NONE")
call s:Color("markdownBold", s:white, s:black, "NONE")
call s:Color("markdownBoldItalic", s:white, s:black, "NONE")
call s:Color("markdownCode", s:white, s:black, "NONE")
call s:Color("markdownFootnote", s:white, s:black, "NONE")
call s:Color("markdownFootnoteDefinition", s:white, s:black, "NONE")
call s:Color("markdownHighlight", s:white, s:black, "NONE")
call s:Color("markdownEscape", s:white, s:black, "NONE")
call s:Color("markdownError", s:white, s:black, "NONE")
call s:Color("markdownHeadingDelimiter", s:pink, s:black, "NONE")
call s:Color("markdownIdDelimiter", s:white, s:black, "NONE")
call s:Color("markdownUrlDelimiter", s:white, s:black, "NONE")
call s:Color("markdownUrlTitleDelimiter", s:white, s:black, "NONE")
call s:Color("markdownItalicDelimiter", s:white, s:black, "NONE")
call s:Color("markdownBoldDelimiter", s:white, s:black, "NONE")
call s:Color("markdownBoldItalicDelimiter", s:white, s:black, "NONE")
call s:Color("markdownCodeDelimiter", s:mint, s:black, "NONE")

" bash

call s:Color("shEcho", s:white, s:black, "NONE")
call s:Color("shEchoQuote", s:white, s:black, "NONE")
call s:Color("shEmbeddedEcho", s:white, s:black, "NONE")
call s:Color("shStatement", s:teal, s:black, "NONE")
call s:Color("shAlias", s:white, s:black, "NONE")
call s:Color("shTouch", s:white, s:black, "NONE")
call s:Color("shTouchCmd", s:white, s:black, "NONE")
call s:Color("shDoError", s:white, s:black, "NONE")
call s:Color("shIfError", s:white, s:black, "NONE")
call s:Color("shInError", s:white, s:black, "NONE")
call s:Color("shCaseError", s:white, s:black, "NONE")
call s:Color("shEsacError", s:white, s:black, "NONE")
call s:Color("shCurlyError", s:white, s:black, "NONE")
call s:Color("shParenError", s:white, s:black, "NONE")
call s:Color("shOK", s:white, s:black, "NONE")
call s:Color("shDTestError", s:white, s:black, "NONE")
call s:Color("shTestError", s:white, s:black, "NONE")
call s:Color("shOption", s:white, s:black, "NONE")
call s:Color("shRedir", s:white, s:black, "NONE")
call s:Color("shOperator", s:white, s:black, "NONE")
call s:Color("shPattern", s:white, s:black, "NONE")
call s:Color("shExpr", s:white, s:black, "NONE")
call s:Color("shSubSh", s:white, s:black, "NONE")
call s:Color("shTest", s:white, s:black, "NONE")
call s:Color("shNoQuote", s:white, s:black, "NONE")
call s:Color("shAstQuote", s:white, s:black, "NONE")
call s:Color("shTestOpr", s:pink, s:black, "NONE")
call s:Color("shTestPattern", s:white, s:black, "NONE")
call s:Color("shTestDoubleQuote", s:white, s:black, "NONE")
call s:Color("shTestSingleQuote", s:white, s:black, "NONE")
call s:Color("shDblBrace", s:white, s:black, "NONE")
call s:Color("shDblParen", s:white, s:black, "NONE")
call s:Color("shCharClass", s:white, s:black, "NONE")
call s:Color("shDo", s:white, s:black, "NONE")
call s:Color("shIf", s:white, s:black, "NONE")
call s:Color("shFor", s:white, s:black, "NONE")
call s:Color("shForPP", s:white, s:black, "NONE")
call s:Color("shRepeat", s:white, s:black, "NONE")
call s:Color("shCaseEsac", s:white, s:black, "NONE")
call s:Color("shCurlyIn", s:white, s:black, "NONE")
call s:Color("shComma", s:white, s:black, "NONE")
call s:Color("shCaseBar", s:white, s:black, "NONE")
call s:Color("shCaseStart", s:white, s:black, "NONE")
call s:Color("shCaseLabel", s:white, s:black, "NONE")
call s:Color("shCase", s:white, s:black, "NONE")
call s:Color("shCaseExSingleQuote", s:white, s:black, "NONE")
call s:Color("shCaseSingleQuote", s:white, s:black, "NONE")
call s:Color("shCaseDoubleQuote", s:white, s:black, "NONE")
call s:Color("shCaseCommandSub", s:white, s:black, "NONE")
call s:Color("shCaseRange", s:white, s:black, "NONE")
call s:Color("shWrapLineOperator", s:white, s:black, "NONE")
call s:Color("shCommandSubBQ", s:white, s:black, "NONE")
call s:Color("shEscape", s:white, s:black, "NONE")
call s:Color("shCommandSub", s:mint, s:black, "NONE")
call s:Color("shArithmetic", s:white, s:black, "NONE")
call s:Color("shSkipInitWS", s:white, s:black, "NONE")
call s:Color("shCmdParenRegion", s:white, s:black, "NONE")
call s:Color("shSource", s:white, s:black, "NONE")
call s:Color("shColon", s:white, s:black, "NONE")
call s:Color("shNumber", s:white, s:black, "NONE")
call s:Color("shCtrlSeq", s:white, s:black, "NONE")
call s:Color("shSpecial", s:white, s:black, "NONE")
call s:Color("shExSingleQuote", s:white, s:black, "NONE")
call s:Color("shExDoubleQuote", s:white, s:black, "NONE")
call s:Color("shSingleQuote", s:white, s:black, "NONE")
call s:Color("shDoubleQuote", s:white, s:black, "NONE")
call s:Color("shStringSpecial", s:white, s:black, "NONE")
call s:Color("shSpecialSQ", s:white, s:black, "NONE")
call s:Color("shSpecialDQ", s:white, s:black, "NONE")
call s:Color("shSpecialStart", s:white, s:black, "NONE")
call s:Color("shSpecialNoZS", s:white, s:black, "NONE")
call s:Color("shSpecialNxt", s:white, s:black, "NONE")
call s:Color("shBkslshSnglQuote", s:white, s:black, "NONE")
call s:Color("shBkslshDblQuote", s:white, s:black, "NONE")
call s:Color("shTodo", s:yellow, s:black, "NONE")
call s:Color("shComment", s:light_gray, s:black, "NONE")
call s:Color("shQuickComment", s:light_gray, s:black, "NONE")
call s:Color("shBQComment", s:white, s:black, "NONE")
call s:Color("shHereDoc", s:white, s:black, "NONE")
call s:Color("shHereString", s:teal, s:black, "NONE")
call s:Color("shSetOption", s:teal, s:black, "NONE")
call s:Color("shVariable", s:white, s:black, "NONE")
call s:Color("shVarAssign", s:white, s:black, "NONE")
call s:Color("shVar", s:white, s:black, "NONE")
call s:Color("shAtExpr", s:white, s:black, "NONE")
call s:Color("shSet", s:teal, s:black, "NONE")
call s:Color("shSetList", s:white, s:black, "NONE")
call s:Color("shFunctionOne", s:white, s:black, "NONE")
call s:Color("shFunctionTwo", s:white, s:black, "NONE")
call s:Color("shFunctionThree", s:white, s:black, "NONE")
call s:Color("shFunctionFour", s:white, s:black, "NONE")
call s:Color("shDerefWordError", s:white, s:black, "NONE")
call s:Color("shDegroupKeywordsimple", s:white, s:black, "NONE")
call s:Color("shDeref", s:white, s:black, "NONE")
call s:Color("shDerefVar", s:teal, s:black, "NONE")
call s:Color("shDegroupKeywordspecial", s:white, s:black, "NONE")
call s:Color("shDerefVarArray", s:white, s:black, "NONE")
call s:Color("shDerefOpError", s:white, s:black, "NONE")
call s:Color("shDerefOp", s:white, s:black, "NONE")
call s:Color("shDerefPattern", s:white, s:black, "NONE")
call s:Color("shDerefEscape", s:white, s:black, "NONE")
call s:Color("shDegroupKeywordstring", s:white, s:black, "NONE")
call s:Color("shDerefOff", s:white, s:black, "NONE")
call s:Color("shDerefLen", s:white, s:black, "NONE")
call s:Color("shDerefPPS", s:white, s:black, "NONE")
call s:Color("shDerefPPSleft", s:white, s:black, "NONE")
call s:Color("shDerefPPSright", s:white, s:black, "NONE")
call s:Color("shDerefPSR", s:white, s:black, "NONE")
call s:Color("shDerefPSRleft", s:white, s:black, "NONE")
call s:Color("shDerefPSRright", s:white, s:black, "NONE")
call s:Color("shParen", s:white, s:black, "NONE")
call s:Color("shArithRegion", s:white, s:black, "NONE")
call s:Color("shBeginHere", s:white, s:black, "NONE")
call s:Color("shCaseIn", s:white, s:black, "NONE")
call s:Color("shQuote", s:mint, s:black, "NONE")
call s:Color("shCmdSubRegion", s:teal, s:black, "NONE")
call s:Color("shDerefPOL", s:white, s:black, "NONE")
call s:Color("shDerefDelim", s:white, s:black, "NONE")
call s:Color("shEchoDelim", s:white, s:black, "NONE")
call s:Color("shFunction", s:white, s:black, "NONE")
call s:Color("shHerePayload", s:white, s:black, "NONE")
call s:Color("shLoop", s:teal, s:black, "NONE")
call s:Color("shPosnParm", s:white, s:black, "NONE")
call s:Color("shRange", s:white, s:black, "NONE")
call s:Color("shSetListDelim", s:white, s:black, "NONE")
call s:Color("shSubShRegion", s:white, s:black, "NONE")
call s:Color("bashAdminStatement", s:white, s:black, "NONE")
call s:Color("bashSpecialVariables", s:white, s:black, "NONE")
call s:Color("bashStatement", s:white, s:black, "NONE")
call s:Color("kshSpecialVariables", s:white, s:black, "NONE")
call s:Color("kshStatement", s:white, s:black, "NONE")
call s:Color("shCondError", s:white, s:black, "NONE")
call s:Color("shSnglCase", s:white, s:black, "NONE")
call s:Color("shConditional", s:pink, s:black, "NONE")
call s:Color("shExprRegion", s:white, s:black, "NONE")
call s:Color("shFunctionKey", s:white, s:black, "NONE")
call s:Color("shFunctionName", s:pink, s:black, "NONE")
call s:Color("shShellVariables", s:white, s:black, "NONE")
call s:Color("shString", s:white, s:black, "NONE")
call s:Color("shHereDoc01", s:pink, s:black, "NONE")
call s:Color("shHereDoc02", s:white, s:black, "NONE")
call s:Color("shHereDoc03", s:white, s:black, "NONE")
call s:Color("shHereDoc04", s:white, s:black, "NONE")
call s:Color("shHereDoc05", s:white, s:black, "NONE")
call s:Color("shHereDoc06", s:white, s:black, "NONE")
call s:Color("shHereDoc07", s:white, s:black, "NONE")
call s:Color("shHereDoc08", s:white, s:black, "NONE")
call s:Color("shHereDoc09", s:white, s:black, "NONE")
call s:Color("shHereDoc10", s:white, s:black, "NONE")
call s:Color("shHereDoc11", s:white, s:black, "NONE")
call s:Color("shHereDoc12", s:white, s:black, "NONE")
call s:Color("shHereDoc13", s:white, s:black, "NONE")
call s:Color("shHereDoc14", s:white, s:black, "NONE")
call s:Color("shHereDoc15", s:white, s:black, "NONE")

" c

call s:Color("cBadContinuation", s:white, s:black, "NONE")
call s:Color("cSpecial", s:white, s:black, "NONE")
call s:Color("cFormat", s:white, s:black, "NONE")
call s:Color("cString", s:mint, s:black, "NONE")
call s:Color("cCharacter", s:mint, s:black, "NONE")
call s:Color("cSpecialError", s:white, s:black, "NONE")
call s:Color("cSpecialCharacter", s:white, s:black, "NONE")
call s:Color("cSpaceError", s:white, s:black, "NONE")
call s:Color("cCurlyError", s:white, s:black, "NONE")
call s:Color("cBlock", s:white, s:black, "NONE")
call s:Color("cParen", s:white, s:black, "NONE")
call s:Color("cCppParen", s:white, s:black, "NONE")
call s:Color("cParenError", s:white, s:black, "NONE")
call s:Color("cErrInParen", s:white, s:black, "NONE")
call s:Color("cBracket", s:white, s:black, "NONE")
call s:Color("cCppBracket", s:white, s:black, "NONE")
call s:Color("cErrInBracket", s:white, s:black, "NONE")
call s:Color("cBadBlock", s:white, s:black, "NONE")
call s:Color("cNumbers", s:mint, s:black, "NONE")
call s:Color("cNumbersCom", s:mint, s:black, "NONE")
call s:Color("cNumber", s:mint, s:black, "NONE")
call s:Color("cOctal", s:white, s:black, "NONE")
call s:Color("cOctalZero", s:white, s:black, "NONE")
call s:Color("cFloat", s:mint, s:black, "NONE")
call s:Color("cOctalError", s:white, s:black, "NONE")
call s:Color("cCommentSkip", s:light_gray, s:black, "NONE")
call s:Color("cCommentString", s:light_gray, s:black, "NONE")
call s:Color("cComment2String", s:light_gray, s:black, "NONE")
call s:Color("cCommentL", s:light_gray, s:black, "NONE")
call s:Color("cWrongComTail", s:white, s:black, "NONE")
call s:Color("cPreConditMatch", s:teal, s:black, "NONE")
call s:Color("cCppOutWrapper", s:white, s:black, "NONE")
call s:Color("cCppOutIf", s:white, s:black, "NONE")
call s:Color("cCppOutIf2", s:white, s:black, "NONE")
call s:Color("cCppOutElse", s:white, s:black, "NONE")
call s:Color("cCppInWrapper", s:white, s:black, "NONE")
call s:Color("cCppInIf", s:white, s:black, "NONE")
call s:Color("cCppInElse", s:white, s:black, "NONE")
call s:Color("cCppInElse2", s:white, s:black, "NONE")
call s:Color("cCppOutSkip", s:white, s:black, "NONE")
call s:Color("cCppInSkip", s:white, s:black, "NONE")
call s:Color("cLineSkip", s:white, s:black, "NONE")
call s:Color("cAutodocReal", s:white, s:black, "NONE")
call s:Color("cMulti", s:white, s:black, "NONE")
call s:Color("cUserCont", s:white, s:black, "NONE")
call s:Color("cUserLabel", s:teal, s:black, "NONE")
call s:Color("cBitField", s:white, s:black, "NONE")
call s:Color("cLabel", s:mint, s:black, "NONE")
call s:Color("cConditional", s:pink, s:black, "NONE")
call s:Color("cRepeat", s:teal, s:black, "NONE")
call s:Color("cOperator", s:white, s:black, "NONE")
call s:Color("cStructure", s:mint, s:black, "NONE")
call s:Color("cStorageClass", s:mint, s:black, "NONE")
call s:Color("cStatement", s:teal, s:black, "NONE")
call s:Color("cType", s:mint, s:black, "NONE")
call s:Color("cConstant", s:mint, s:black, "NONE")
call s:Color("cTodo", s:yellow, s:black, "NONE")

" cpp

call s:Color("cppCast", s:teal, s:black, "NONE")
call s:Color("cppNumber", s:mint, s:black, "NONE")
call s:Color("cppStatement", s:teal, s:black, "NONE")
call s:Color("cppModifier", s:mint, s:black, "NONE")
call s:Color("cppType", s:mint, s:black, "NONE")
call s:Color("cppStorageClass", s:mint, s:black, "NONE")
call s:Color("cppStructure", s:mint, s:black, "NONE")
call s:Color("cppBoolean", s:mint, s:black, "NONE")
call s:Color("cppConstant", s:mint, s:black, "NONE")
call s:Color("cppRawStringDelimiter", s:mint, s:black, "NONE")

" go

call s:Color("goType", s:mint, s:black, "NONE")
call s:Color("goDeclaration", s:mint, s:black, "NONE")
call s:Color("goComment", s:light_gray, s:black, "NONE")
call s:Color("goEscapeOctal", s:teal, s:black, "NONE")
call s:Color("goEscapeC", s:teal, s:black, "NONE")
call s:Color("goEscapeX", s:teal, s:black, "NONE")
call s:Color("goEscapeU", s:teal, s:black, "NONE")
call s:Color("goEscapeBigU", s:teal, s:black, "NONE")
call s:Color("goEscapeError", s:teal, s:black, "NONE")
call s:Color("goString", s:mint, s:black, "NONE")
call s:Color("goRawString", s:mint, s:black, "NONE")
call s:Color("goCharacter", s:teal, s:black, "NONE")
call s:Color("goBlock", s:teal, s:black, "NONE")
call s:Color("goParen", s:teal, s:black, "NONE")
call s:Color("goDecimalInt", s:mint, s:black, "NONE")
call s:Color("goHexadecimalInt", s:mint, s:black, "NONE")
call s:Color("goOctalInt", s:mint, s:black, "NONE")
call s:Color("goOctalError", s:teal, s:black, "NONE")
call s:Color("goFloat", s:teal, s:black, "NONE")
call s:Color("goImaginary", s:teal, s:black, "NONE")
call s:Color("goSpaceError", s:teal, s:black, "NONE")
call s:Color("goExtraType", s:teal, s:black, "NONE")
call s:Color("goDirective", s:teal, s:black, "NONE")
call s:Color("goDeclType", s:mint, s:black, "NONE")
call s:Color("goStatement", s:teal, s:black, "NONE")
call s:Color("goConditional", s:pink, s:black, "NONE")
call s:Color("goLabel", s:teal, s:black, "NONE")
call s:Color("goRepeat", s:teal, s:black, "NONE")
call s:Color("goSignedInts", s:mint, s:black, "NONE")
call s:Color("goUnsignedInts", s:teal, s:black, "NONE")
call s:Color("goFloats", s:teal, s:black, "NONE")
call s:Color("goComplexes", s:teal, s:black, "NONE")
call s:Color("goBuiltins", s:mint, s:black, "NONE")
call s:Color("goConstants", s:mint, s:black, "NONE")
call s:Color("goTodo", s:teal, s:black, "NONE")
call s:Color("goSpecialString", s:teal, s:black, "NONE")
call s:Color("Integer", s:mint, s:black, "NONE")

" lisp

call s:Color("lispSymbol", s:white, s:black, "NONE")
call s:Color("lispBarSymbol", s:white, s:black, "NONE")
call s:Color("lispParen0", s:white, s:black, "NONE")
call s:Color("lispParen1", s:white, s:black, "NONE")
call s:Color("lispParen2", s:white, s:black, "NONE")
call s:Color("lispParen3", s:white, s:black, "NONE")
call s:Color("lispParen4", s:white, s:black, "NONE")
call s:Color("lispParen5", s:white, s:black, "NONE")
call s:Color("lispParen6", s:white, s:black, "NONE")
call s:Color("lispParen7", s:white, s:black, "NONE")
call s:Color("lispParen8", s:white, s:black, "NONE")
call s:Color("lispParen9", s:white, s:black, "NONE")
call s:Color("lispList", s:white, s:black, "NONE")
call s:Color("lispBQList", s:white, s:black, "NONE")
call s:Color("lispAtomMark", s:white, s:black, "NONE")
call s:Color("lispAtom", s:white, s:black, "NONE")
call s:Color("lispAtomBarSymbol", s:white, s:black, "NONE")
call s:Color("lispAtomList", s:white, s:black, "NONE")
call s:Color("lispAtomNmbr", s:white, s:black, "NONE")
call s:Color("lispLeadWhite", s:white, s:black, "NONE")
call s:Color("lispFunc", s:pink, s:black, "NONE")
call s:Color("lispString", s:mint, s:black, "NONE")
call s:Color("lispInString", s:white, s:black, "NONE")
call s:Color("lispInStringString", s:white, s:black, "NONE")
call s:Color("lispDecl", s:teal, s:black, "NONE")
call s:Color("lispNumber", s:mint, s:black, "NONE")
call s:Color("lispEscapeSpecial", s:mint, s:black, "NONE")
call s:Color("lispConcat", s:white, s:black, "NONE")
call s:Color("lispParenError", s:white, s:black, "NONE")
call s:Color("lispComment", s:light_gray, s:black, "NONE")
call s:Color("lispCommentRegion", s:light_gray, s:black, "NONE")
call s:Color("lispKey", s:mint, s:black, "NONE")
call s:Color("lispMark", s:white, s:black, "NONE")
call s:Color("lispTodo", s:yellow, s:black, "NONE")
call s:Color("lispVar", s:white, s:black, "NONE")
call s:Color("lispParen", s:white, s:black, "NONE")

" lua

call s:Color("luaComment", s:light_gray, s:black, "NONE")
call s:Color("luaInnerComment", s:white, s:black, "NONE")
call s:Color("luaParen", s:white, s:black, "NONE")
call s:Color("luaTableBlock", s:white, s:black, "NONE")
call s:Color("luaParenError", s:white, s:black, "NONE")
call s:Color("luaBraceError", s:white, s:black, "NONE")
call s:Color("luaError", s:white, s:black, "NONE")
call s:Color("luaFunctionBlock", s:white, s:black, "NONE")
call s:Color("luaIfThen", s:white, s:black, "NONE")
call s:Color("luaThenEnd", s:white, s:black, "NONE")
call s:Color("luaElseifThen", s:white, s:black, "NONE")
call s:Color("luaBlock", s:white, s:black, "NONE")
call s:Color("luaLoopBlock", s:white, s:black, "NONE")
call s:Color("luaLabel", s:white, s:black, "NONE")
call s:Color("luaSpecial", s:mint, s:black, "NONE")
call s:Color("luaString2", s:mint, s:black, "NONE")
call s:Color("luaString", s:mint, s:black, "NONE")
call s:Color("luaNumber", s:mint, s:black, "NONE")
call s:Color("luaFunc", s:teal, s:black, "NONE")
call s:Color("luaStatement", s:teal, s:black, "NONE")
call s:Color("luaRepeat", s:teal, s:black, "NONE")
call s:Color("luaFor", s:teal, s:black, "NONE")
call s:Color("luaOperator", s:mint, s:black, "NONE")
call s:Color("luaIn", s:white, s:black, "NONE")
call s:Color("luaConstant", s:mint, s:black, "NONE")
call s:Color("luaCond", s:pink, s:black, "NONE")
call s:Color("luaElse", s:pink, s:black, "NONE")
call s:Color("luaFunction", s:white, s:black, "NONE")
call s:Color("luaTodo", s:yellow, s:black, "NONE")
call s:Color("luaTable", s:white, s:black, "NONE")

" rust

call s:Color("rustUnionContextual", s:white, s:black, "NONE")
call s:Color("rustAssert", s:white, s:black, "NONE")
call s:Color("rustPanic", s:white, s:black, "NONE")
call s:Color("rustDefault", s:white, s:black, "NONE")
call s:Color("rustPubScopeDelim", s:white, s:black, "NONE")
call s:Color("rustPubScope", s:white, s:black, "NONE")
call s:Color("rustExternCrateString", s:white, s:black, "NONE")
call s:Color("rustIdentifier", s:white, s:black, "NONE")
call s:Color("rustFuncName", s:white, s:black, "NONE")
call s:Color("rustBoxPlacement", s:white, s:black, "NONE")
call s:Color("rustBoxPlacementBalance", s:white, s:black, "NONE")
call s:Color("rustMacroRepeat", s:white, s:black, "NONE")
call s:Color("rustMacroRepeatCount", s:white, s:black, "NONE")
call s:Color("rustMacroVariable", s:white, s:black, "NONE")
call s:Color("rustModPath", s:teal, s:black, "NONE")
call s:Color("rustModPathSep", s:white, s:black, "NONE")
call s:Color("rustFuncCall", s:white, s:black, "NONE")
call s:Color("rustCapsIdent", s:white, s:black, "NONE")
call s:Color("rustOperator", s:mint, s:black, "NONE")
call s:Color("rustSigil", s:mint, s:black, "NONE")
call s:Color("rustArrowCharacter", s:pink, s:black, "NONE")
call s:Color("rustQuestionMark", s:pink, s:black, "NONE")
call s:Color("rustMacro", s:white, s:black, "NONE")
call s:Color("rustEscapeError", s:white, s:black, "NONE")
call s:Color("rustEscape", s:white, s:black, "NONE")
call s:Color("rustEscapeUnicode", s:white, s:black, "NONE")
call s:Color("rustStringContinuation", s:white, s:black, "NONE")
call s:Color("rustString", s:mint, s:black, "NONE")
call s:Color("rustAttribute", s:white, s:black, "NONE")
call s:Color("rustDerive", s:white, s:black, "NONE")
call s:Color("rustDecNumber", s:mint, s:black, "NONE")
call s:Color("rustHexNumber", s:mint, s:black, "NONE")
call s:Color("rustOctNumber", s:mint, s:black, "NONE")
call s:Color("rustBinNumber", s:mint, s:black, "NONE")
call s:Color("rustFloat", s:mint, s:black, "NONE")
call s:Color("rustLifetimeCandidate", s:white, s:black, "NONE")
call s:Color("rustGenericRegion", s:white, s:black, "NONE")
call s:Color("rustGenericLifetimeCandidate", s:white, s:black, "NONE")
call s:Color("rustLifetime", s:white, s:black, "NONE")
call s:Color("rustLabel", s:white, s:black, "NONE")
call s:Color("rustCharacterInvalid", s:white, s:black, "NONE")
call s:Color("rustCharacterInvalidUnicode", s:white, s:black, "NONE")
call s:Color("rustCharacter", s:mint, s:black, "NONE")
call s:Color("rustShebang", s:light_gray, s:black, "NONE")
call s:Color("rustCommentLine", s:light_gray, s:black, "NONE")
call s:Color("rustCommentLineDoc", s:light_gray, s:black, "NONE")
call s:Color("rustCommentLineDocError", s:white, s:black, "NONE")
call s:Color("rustCommentBlock", s:light_gray, s:black, "NONE")
call s:Color("rustCommentBlockDoc", s:light_gray, s:black, "NONE")
call s:Color("rustCommentBlockDocError", s:white, s:black, "NONE")
call s:Color("rustCommentBlockNest", s:light_gray, s:black, "NONE")
call s:Color("rustCommentBlockDocNest", s:light_gray, s:black, "NONE")
call s:Color("rustCommentBlockDocNestError", s:white, s:black, "NONE")
call s:Color("rustFoldBraces", s:white, s:black, "NONE")
call s:Color("rustIdentifierPrime", s:white, s:black, "NONE")
call s:Color("rustTrait", s:white, s:black, "NONE")
call s:Color("rustDeriveTrait", s:white, s:black, "NONE")
call s:Color("rustMacroRepeatDelimiters", s:white, s:black, "NONE")
call s:Color("rustNumber", s:mint, s:black, "NONE")
call s:Color("rustBoolean", s:mint, s:black, "NONE")
call s:Color("rustEnum", s:mint, s:black, "NONE")
call s:Color("rustEnumVariant", s:white, s:black, "NONE")
call s:Color("rustConstant", s:mint, s:black, "NONE")
call s:Color("rustSelf", s:pink, s:black, "NONE")
call s:Color("rustKeyword", s:mint, s:black, "NONE")
call s:Color("rustTypedef", s:mint, s:black, "NONE")
call s:Color("rustStructure", s:white, s:black, "NONE")
call s:Color("rustUnion", s:white, s:black, "NONE")
call s:Color("rustPubScopeCrate", s:teal, s:black, "NONE")
call s:Color("rustSuper", s:white, s:black, "NONE")
call s:Color("rustReservedKeyword", s:white, s:black, "NONE")
call s:Color("rustRepeat", s:teal, s:black, "NONE")
call s:Color("rustConditional", s:pink, s:black, "NONE")
call s:Color("rustFunction", s:white, s:black, "NONE")
call s:Color("rustType", s:mint, s:black, "NONE")
call s:Color("rustTodo", s:yellow, s:black, "NONE")
call s:Color("rustStorage", s:mint, s:black, "NONE")
call s:Color("rustObsoleteStorage", s:white, s:black, "NONE")
call s:Color("rustInvalidBareKeyword", s:white, s:black, "NONE")
call s:Color("rustExternCrate", s:white, s:black, "NONE")
call s:Color("rustObsoleteExternMod", s:white, s:black, "NONE")
call s:Color("rustBoxPlacementParens", s:white, s:black, "NONE")

" python

call s:Color("pythonDecorator", s:teal, s:black, "NONE")
call s:Color("pythonDecoratorName", s:white, s:black, "NONE")
call s:Color("pythonMatrixMultiply", s:white, s:black, "NONE")
call s:Color("pythonFunction", s:white, s:black, "NONE")
call s:Color("pythonComment", s:light_gray, s:black, "NONE")
call s:Color("pythonString", s:mint, s:black, "NONE")
call s:Color("pythonRawString", s:white, s:black, "NONE")
call s:Color("pythonEscape", s:teal, s:black, "NONE")
call s:Color("pythonNumber", s:mint, s:black, "NONE")
call s:Color("pythonAttribute", s:white, s:black, "NONE")
call s:Color("pythonSpaceError", s:white, s:black, "NONE")
call s:Color("pythonDoctest", s:white, s:black, "NONE")
call s:Color("pythonDoctestValue", s:white, s:black, "NONE")
call s:Color("pythonStatement", s:teal, s:black, "NONE")
call s:Color("pythonConditional", s:pink, s:black, "NONE")
call s:Color("pythonRepeat", s:teal, s:black, "NONE")
call s:Color("pythonOperator", s:white, s:black, "NONE")
call s:Color("pythonException", s:teal, s:black, "NONE")
call s:Color("pythonInclude", s:teal, s:black, "NONE")
call s:Color("pythonAsync", s:white, s:black, "NONE")
call s:Color("pythonTodo", s:yellow, s:black, "NONE")
call s:Color("pythonQuotes", s:mint, s:black, "NONE")
call s:Color("pythonTripleQuotes", s:white, s:black, "NONE")
call s:Color("pythonBuiltin", s:white, s:black, "NONE")
call s:Color("pythonExceptions", s:white, s:black, "NONE")

" json

call s:Color("jsonNoise", s:white, s:black, "NONE")
call s:Color("jsonKeywordMatch", s:white, s:black, "NONE")
call s:Color("jsonKeyword", s:teal, s:black, "NONE")
call s:Color("jsonStringMatch", s:white, s:black, "NONE")
call s:Color("jsonString", s:mint, s:black, "NONE")
call s:Color("jsonStringSQError", s:white, s:black, "NONE")
call s:Color("jsonEscape", s:white, s:black, "NONE")
call s:Color("jsonNumber", s:mint, s:black, "NONE")
call s:Color("jsonNoQuotesError", s:white, s:black, "NONE")
call s:Color("jsonTripleQuotesError", s:white, s:black, "NONE")
call s:Color("jsonNumError", s:white, s:black, "NONE")
call s:Color("jsonCommentError", s:white, s:black, "NONE")
call s:Color("jsonSemicolonError", s:white, s:black, "NONE")
call s:Color("jsonTrailingCommaError", s:white, s:black, "NONE")
call s:Color("jsonMissingCommaError", s:white, s:black, "NONE")
call s:Color("jsonPadding", s:white, s:black, "NONE")
call s:Color("jsonBoolean", s:mint, s:black, "NONE")
call s:Color("jsonFold", s:white, s:black, "NONE")
call s:Color("jsonTest", s:white, s:black, "NONE")
call s:Color("jsonBraces", s:white, s:black, "NONE")
call s:Color("jsonNull", s:mint, s:black, "NONE")
call s:Color("jsonQuote", s:white, s:black, "NONE")

" yaml

call s:Color("yamlComment", s:light_gray, s:black, "NONE")
call s:Color("yamlDirective", s:pink, s:black, "NONE")
call s:Color("yamlTAGDirective", s:white, s:black, "NONE")
call s:Color("yamlTagHandle", s:white, s:black, "NONE")
call s:Color("yamlTagPrefix", s:white, s:black, "NONE")
call s:Color("yamlYAMLDirective", s:white, s:black, "NONE")
call s:Color("yamlYAMLVersion", s:white, s:black, "NONE")
call s:Color("yamlReservedDirective", s:white, s:black, "NONE")
call s:Color("yamlFlowString", s:mint, s:black, "NONE")
call s:Color("yamlEscape", s:white, s:black, "NONE")
call s:Color("yamlSingleEscape", s:white, s:black, "NONE")
call s:Color("yamlBlockScalarHeader", s:white, s:black, "NONE")
call s:Color("yamlFlowMapping", s:white, s:black, "NONE")
call s:Color("yamlFlowCollection", s:white, s:black, "NONE")
call s:Color("yamlPlainScalar", s:white, s:black, "NONE")
call s:Color("yamlMappingKeyStart", s:white, s:black, "NONE")
call s:Color("yamlFlowMappingKey", s:white, s:black, "NONE")
call s:Color("yamlFlowMappingMerge", s:white, s:black, "NONE")
call s:Color("yamlBlockCollectionItemStart", s:pink, s:black, "NONE")
call s:Color("yamlBlockMappingKey", s:white, s:black, "NONE")
call s:Color("yamlBlockMappingMerge", s:white, s:black, "NONE")
call s:Color("yamlKeyValueDelimiter", s:teal, s:black, "NONE")
call s:Color("yamlInteger", s:mint, s:black, "NONE")
call s:Color("yamlFloat", s:mint, s:black, "NONE")
call s:Color("yamlNull", s:mint, s:black, "NONE")
call s:Color("yamlTimestamp", s:white, s:black, "NONE")
call s:Color("yamlNodeTag", s:white, s:black, "NONE")
call s:Color("yamlAnchor", s:white, s:black, "NONE")
call s:Color("yamlAlias", s:white, s:black, "NONE")
call s:Color("yamlDocumentStart", s:white, s:black, "NONE")
call s:Color("yamlDocumentEnd", s:white, s:black, "NONE")
call s:Color("yamlTodo", s:yellow, s:black, "NONE")
call s:Color("yamlDirectiveName", s:white, s:black, "NONE")
call s:Color("yamlString", s:mint, s:black, "NONE")
call s:Color("yamlFlowStringDelimiter", s:white, s:black, "NONE")
call s:Color("yamlFlowIndicator", s:white, s:black, "NONE")
call s:Color("yamlConstant", s:mint, s:black, "NONE")
call s:Color("yamlBool", s:mint, s:black, "NONE")

" toml

call s:Color("tomlEscape", s:white, s:black, "NONE")
call s:Color("tomlLineEscape", s:white, s:black, "NONE")
call s:Color("tomlString", s:mint, s:black, "NONE")
call s:Color("tomlInteger", s:mint, s:black, "NONE")
call s:Color("tomlFloat", s:mint, s:black, "NONE")
call s:Color("tomlBoolean", s:mint, s:black, "NONE")
call s:Color("tomlDate", s:white, s:black, "NONE")
call s:Color("tomlKey", s:white, s:black, "NONE")
call s:Color("tomlKeyDq", s:white, s:black, "NONE")
call s:Color("tomlKeySq", s:white, s:black, "NONE")
call s:Color("tomlTable", s:white, s:black, "NONE")
call s:Color("tomlTableArray", s:white, s:black, "NONE")
call s:Color("tomlKeyValueArray", s:white, s:black, "NONE")
call s:Color("tomlArray", s:white, s:black, "NONE")
call s:Color("tomlComment", s:light_gray, s:black, "NONE")
call s:Color("tomlTodo", s:yellow, s:black, "NONE")

" make

call s:Color("makeSpecial", s:teal, s:black, "NONE")
call s:Color("makeNextLine", s:white, s:black, "NONE")
call s:Color("makePreCondit", s:pink, s:black, "NONE")
call s:Color("makeInclude", s:white, s:black, "NONE")
call s:Color("makeStatement", s:white, s:black, "NONE")
call s:Color("makeExport", s:white, s:black, "NONE")
call s:Color("makeOverride", s:white, s:black, "NONE")
call s:Color("makeDefine", s:white, s:black, "NONE")
call s:Color("makeIdent", s:mint, s:black, "NONE")
call s:Color("makeConfig", s:white, s:black, "NONE")
call s:Color("makeSpecTarget", s:pink, s:black, "NONE")
call s:Color("makeImplicit", s:white, s:black, "NONE")
call s:Color("makeTarget", s:pink, s:black, "NONE")
call s:Color("makeCommandError", s:white, s:black, "NONE")
call s:Color("makeCommands", s:white, s:black, "NONE")
call s:Color("makeCmdNextLine", s:white, s:black, "NONE")
call s:Color("makeComment", s:light_gray, s:black, "NONE")
call s:Color("makeEscapedChar", s:white, s:black, "NONE")
call s:Color("makeDString", s:mint, s:black, "NONE")
call s:Color("makeSString", s:white, s:black, "NONE")
call s:Color("makeBString", s:white, s:black, "NONE")
call s:Color("makeError", s:white, s:black, "NONE")
call s:Color("makeTodo", s:white, s:black, "NONE")

" vim

call s:Color("vimCommand", s:pink, s:black, "NONE")
call s:Color("vimOption", s:teal, s:black, "NONE")
" call s:Color("vimHLGroup", s:white, s:black, "NONE")
" call s:Color("vimNumber", s:white, s:black, "NONE")
" call s:Color("vimCmdSep", s:white, s:black, "NONE")
call s:Color("vimIsCommand", s:pink, s:black, "NONE")
call s:Color("vimVar", s:white, s:black, "NONE")
" call s:Color("vimFBVar", s:white, s:black, "NONE")
" call s:Color("vimInsert", s:white, s:black, "NONE")
" call s:Color("vimBehave", s:white, s:black, "NONE")
" call s:Color("vimBehaveError", s:white, s:black, "NONE")
" call s:Color("vimFiletype", s:white, s:black, "NONE")
" call s:Color("vimFTError", s:white, s:black, "NONE")
" call s:Color("vimAugroup", s:white, s:black, "NONE")
" call s:Color("vimAugroupError", s:white, s:black, "NONE")
" call s:Color("vimOper", s:white, s:black, "NONE")
" call s:Color("vimOperParen", s:white, s:black, "NONE")
" call s:Color("vimOperError", s:white, s:black, "NONE")
" call s:Color("vimFunction", s:white, s:black, "NONE")
" call s:Color("vimFuncBody", s:white, s:black, "NONE")
" call s:Color("vimFuncVar", s:white, s:black, "NONE")
" call s:Color("vimFuncSID", s:white, s:black, "NONE")
" call s:Color("vimFuncBlank", s:white, s:black, "NONE")
" call s:Color("vimSpecFile", s:white, s:black, "NONE")
" call s:Color("vimSpecFileMod", s:white, s:black, "NONE")
" call s:Color("vimUserCmd", s:mint, s:black, "NONE")
" call s:Color("vimUserAttrbError", s:white, s:black, "NONE")
" call s:Color("vimUserAttrb", s:white, s:black, "NONE")
" call s:Color("vimUserCmdError", s:white, s:black, "NONE")
" call s:Color("vimUserAttrbCmpltFunc", s:white, s:black, "NONE")
" call s:Color("vimUserAttrbCmplt", s:white, s:black, "NONE")
" call s:Color("vimComment", s:light_gray, s:black, "NONE")
" call s:Color("vimCommentString", s:white, s:black, "NONE")
" call s:Color("vimEnvvar", s:white, s:black, "NONE")
" call s:Color("vimEscapeBrace", s:white, s:black, "NONE")
" call s:Color("vimPatSepErr", s:white, s:black, "NONE")
" call s:Color("vimPatSep", s:white, s:black, "NONE")
" call s:Color("vimPatSepZone", s:white, s:black, "NONE")
" call s:Color("vimPatRegion", s:white, s:black, "NONE")
" call s:Color("vimNotPatSep", s:white, s:black, "NONE")
" call s:Color("vimString", s:mint, s:black, "NONE")
" call s:Color("vimStringCont", s:white, s:black, "NONE")
" call s:Color("vimSubst", s:white, s:black, "NONE")
" call s:Color("vimSubst1", s:white, s:black, "NONE")
" call s:Color("vimSubst2", s:white, s:black, "NONE")
" call s:Color("vimSubstPat", s:white, s:black, "NONE")
" call s:Color("vimSubstRep4", s:white, s:black, "NONE")
" call s:Color("vimCollection", s:white, s:black, "NONE")
" call s:Color("vimCollClassErr", s:white, s:black, "NONE")
" call s:Color("vimCollClass", s:white, s:black, "NONE")
" call s:Color("vimSubstSubstr", s:white, s:black, "NONE")
" call s:Color("vimSubstTwoBS", s:white, s:black, "NONE")
" call s:Color("vimSubstFlagErr", s:white, s:black, "NONE")
" call s:Color("vimSubstFlags", s:white, s:black, "NONE")
" call s:Color("vimMark", s:white, s:black, "NONE")
" call s:Color("vimMarkNumber", s:white, s:black, "NONE")
" call s:Color("vimPlainMark", s:white, s:black, "NONE")
" call s:Color("vimRange", s:white, s:black, "NONE")
" call s:Color("vimRegister", s:white, s:black, "NONE")
" call s:Color("vimPlainRegister", s:white, s:black, "NONE")
" call s:Color("vimAddress", s:white, s:black, "NONE")
" call s:Color("vimFilter", s:white, s:black, "NONE")
" call s:Color("vimCmplxRepeat", s:white, s:black, "NONE")
call s:Color("vimSet", s:teal, s:black, "NONE")
call s:Color("vimSetEqual", s:mint, s:black, "NONE")
" call s:Color("vimSetString", s:white, s:black, "NONE")
" call s:Color("vimSetSep", s:white, s:black, "NONE")
" call s:Color("vimSetMod", s:white, s:black, "NONE")
" call s:Color("vimAutoEventList", s:white, s:black, "NONE")
" call s:Color("vimAutoCmdSpace", s:white, s:black, "NONE")
" call s:Color("vimAutoCmdSfxList", s:white, s:black, "NONE")
" call s:Color("vimEcho", s:white, s:black, "NONE")
" call s:Color("vimExecute", s:white, s:black, "NONE")
" call s:Color("vimEchoHL", s:white, s:black, "NONE")
" call s:Color("vimMap", s:white, s:black, "NONE")
call s:Color("vimMapLhs", s:mint, s:black, "NONE")
" call s:Color("vimMapBang", s:white, s:black, "NONE")
" call s:Color("vimMapMod", s:white, s:black, "NONE")
call s:Color("vimMapRhs", s:mint, s:black, "NONE")
" call s:Color("vimMapRhsExtend", s:white, s:black, "NONE")
" call s:Color("vimMenuName", s:white, s:black, "NONE")
" call s:Color("vimMenuPriority", s:white, s:black, "NONE")
" call s:Color("vimMenuNameMore", s:white, s:black, "NONE")
" call s:Color("vimMenuMod", s:white, s:black, "NONE")
" call s:Color("vimMenuMap", s:white, s:black, "NONE")
" call s:Color("vimMenuRhs", s:white, s:black, "NONE")
" call s:Color("vimMenuBang", s:white, s:black, "NONE")
" call s:Color("vimNotation", s:white, s:black, "NONE")
" call s:Color("vimBracket", s:white, s:black, "NONE")
" call s:Color("vimFunc", s:white, s:black, "NONE")
" call s:Color("vimUserFunc", s:white, s:black, "NONE")
" call s:Color("vimFunctionError", s:white, s:black, "NONE")
" call s:Color("vimElseIfErr", s:white, s:black, "NONE")
" call s:Color("vimBufnrWarn", s:white, s:black, "NONE")
" call s:Color("vimNotFunc", s:white, s:black, "NONE")
" call s:Color("vimNorm", s:white, s:black, "NONE")
" call s:Color("vimNormCmds", s:white, s:black, "NONE")
" call s:Color("vimGroupList", s:white, s:black, "NONE")
" call s:Color("vimSynError", s:white, s:black, "NONE")
" call s:Color("vimSynContains", s:white, s:black, "NONE")
" call s:Color("vimSynKeyContainedin", s:white, s:black, "NONE")
" call s:Color("vimSynNextgroup", s:white, s:black, "NONE")
" call s:Color("vimSyntax", s:white, s:black, "NONE")
" call s:Color("vimAuSyntax", s:white, s:black, "NONE")
" call s:Color("vimSynCaseError", s:white, s:black, "NONE")
" call s:Color("vimClusterName", s:white, s:black, "NONE")
" call s:Color("vimGroupAdd", s:white, s:black, "NONE")
" call s:Color("vimGroupRem", s:white, s:black, "NONE")
" call s:Color("vimIskList", s:white, s:black, "NONE")
" call s:Color("vimIskSep", s:white, s:black, "NONE")
" call s:Color("vimSynKeyRegion", s:white, s:black, "NONE")
" call s:Color("vimSynKeyOpt", s:white, s:black, "NONE")
" call s:Color("vimSynMatchRegion", s:white, s:black, "NONE")
" call s:Color("vimSynMtchOpt", s:white, s:black, "NONE")
" call s:Color("vimSynMtchCchar", s:white, s:black, "NONE")
" call s:Color("vimSynRegion", s:white, s:black, "NONE")
" call s:Color("vimSynRegOpt", s:white, s:black, "NONE")
" call s:Color("vimSynReg", s:white, s:black, "NONE")
" call s:Color("vimSynMtchGrp", s:white, s:black, "NONE")
" call s:Color("vimSynRegPat", s:white, s:black, "NONE")
" call s:Color("vimSynPatMod", s:white, s:black, "NONE")
" call s:Color("vimSynPatRange", s:white, s:black, "NONE")
" call s:Color("vimSynNotPatRange", s:white, s:black, "NONE")
" call s:Color("vimMtchComment", s:white, s:black, "NONE")
" call s:Color("vimSyncError", s:white, s:black, "NONE")
" call s:Color("vimSyncLinebreak", s:white, s:black, "NONE")
" call s:Color("vimSyncLines", s:white, s:black, "NONE")
" call s:Color("vimSyncGroupName", s:white, s:black, "NONE")
" call s:Color("vimSyncKey", s:white, s:black, "NONE")
" call s:Color("vimSyncGroup", s:white, s:black, "NONE")
" call s:Color("vimHiCtermError", s:white, s:black, "NONE")
" call s:Color("vimHighlight", s:white, s:black, "NONE")
" call s:Color("vimHiBang", s:white, s:black, "NONE")
" call s:Color("vimHiGroup", s:white, s:black, "NONE")
" call s:Color("vimHiAttribList", s:white, s:black, "NONE")
" call s:Color("vimHiCtermColor", s:white, s:black, "NONE")
" call s:Color("vimHiFontname", s:white, s:black, "NONE")
" call s:Color("vimHiGuiFontname", s:white, s:black, "NONE")
" call s:Color("vimHiGuiRgb", s:white, s:black, "NONE")
" call s:Color("vimHiKeyList", s:white, s:black, "NONE")
" call s:Color("vimHiKeyError", s:white, s:black, "NONE")
" call s:Color("vimHiTerm", s:white, s:black, "NONE")
" call s:Color("vimHiStartStop", s:white, s:black, "NONE")
" call s:Color("vimHiCTerm", s:white, s:black, "NONE")
" call s:Color("vimHiCtermFgBg", s:white, s:black, "NONE")
" call s:Color("vimHiGui", s:white, s:black, "NONE")
" call s:Color("vimHiGuiFont", s:white, s:black, "NONE")
" call s:Color("vimHiGuiFgBg", s:white, s:black, "NONE")
" call s:Color("vimHiTermcap", s:white, s:black, "NONE")
" call s:Color("vimHiNmbr", s:white, s:black, "NONE")
" call s:Color("vimHiLink", s:white, s:black, "NONE")
" call s:Color("vimCtrlChar", s:white, s:black, "NONE")
" call s:Color("vimLineComment", s:light_gray, s:black, "NONE")
" call s:Color("vimCommentTitle", s:white, s:black, "NONE")
" call s:Color("vimContinue", s:mint, s:black, "NONE")
" call s:Color("vimCommentTitleLeader", s:white, s:black, "NONE")
call s:Color("vimSearch", s:pink, s:dark_gray, "NONE")
" call s:Color("vimSearchDelim", s:white, s:black, "NONE")
" call s:Color("vimGlobal", s:white, s:black, "NONE")
" call s:Color("vimLuaRegion", s:white, s:black, "NONE")
" call s:Color("vimEmbedError", s:white, s:black, "NONE")
" call s:Color("vimPerlRegion", s:white, s:black, "NONE")
" call s:Color("vimRubyRegion", s:white, s:black, "NONE")
" call s:Color("vimPythonRegion", s:white, s:black, "NONE")
" call s:Color("vimTclRegion", s:white, s:black, "NONE")
" call s:Color("vimMzSchemeRegion", s:white, s:black, "NONE")
" call s:Color("vimErrSetting", s:white, s:black, "NONE")
" call s:Color("vimKeyCodeError", s:white, s:black, "NONE")
" call s:Color("vimMapModErr", s:white, s:black, "NONE")
" call s:Color("vimAbb", s:white, s:black, "NONE")
" call s:Color("vimAugroupKey", s:white, s:black, "NONE")
" call s:Color("vimAuHighlight", s:white, s:black, "NONE")
" call s:Color("vimAutoCmdOpt", s:white, s:black, "NONE")
" call s:Color("vimAutoCmd", s:pink, s:black, "NONE")
" call s:Color("vimAutoEvent", s:white, s:black, "NONE")
" call s:Color("vimAutoSet", s:white, s:black, "NONE")
" call s:Color("vimBehaveModel", s:white, s:black, "NONE")
" call s:Color("vimCondHL", s:white, s:black, "NONE")
" call s:Color("vimEchoHLNone", s:white, s:black, "NONE")
" call s:Color("vimElseif", s:white, s:black, "NONE")
" call s:Color("vimError", s:white, s:black, "NONE")
" call s:Color("vimFgBgAttrib", s:white, s:black, "NONE")
" call s:Color("vimFold", s:white, s:black, "NONE")
" call s:Color("vimFTCmd", s:white, s:black, "NONE")
" call s:Color("vimFTOption", s:white, s:black, "NONE")
" call s:Color("vimFuncKey", s:white, s:black, "NONE")
" call s:Color("vimFuncName", s:white, s:black, "NONE")
" call s:Color("vimGroupName", s:white, s:black, "NONE")
" call s:Color("vimGroupSpecial", s:white, s:black, "NONE")
" call s:Color("vimGroup", s:white, s:black, "NONE")
" call s:Color("vimHiAttrib", s:white, s:black, "NONE")
" call s:Color("vimHiClear", s:white, s:black, "NONE")
" call s:Color("vimHLMod", s:white, s:black, "NONE")
" call s:Color("vimKeyCode", s:white, s:black, "NONE")
" call s:Color("vimKeyword", s:white, s:black, "NONE")
" call s:Color("vimLet", s:teal, s:black, "NONE")
" call s:Color("vimMapModKey", s:white, s:black, "NONE")
" call s:Color("vimParenSep", s:white, s:black, "NONE")
" call s:Color("vimPatSepR", s:white, s:black, "NONE")
" call s:Color("vimPatSepZ", s:white, s:black, "NONE")
" call s:Color("vimPattern", s:white, s:black, "NONE")
" call s:Color("vimScriptDelim", s:white, s:black, "NONE")
" call s:Color("vimSep", s:white, s:black, "NONE")
" call s:Color("vimSpecial", s:white, s:black, "NONE")
" call s:Color("vimStatement", s:white, s:black, "NONE")
" call s:Color("vimStringEnd", s:mint, s:black, "NONE")
" call s:Color("vimSubstDelim", s:white, s:black, "NONE")
" call s:Color("vimSynCase", s:white, s:black, "NONE")
" call s:Color("vimSyncC", s:white, s:black, "NONE")
" call s:Color("vimSyncNone", s:white, s:black, "NONE")
" call s:Color("vimSynOption", s:white, s:black, "NONE")
" call s:Color("vimSynType", s:white, s:black, "NONE")
" call s:Color("vimTodo", s:yellow, s:black, "NONE")
" call s:Color("vimUnmap", s:white, s:black, "NONE")
" call s:Color("vimUserAttrbKey", s:white, s:black, "NONE")
call s:Color("vimUsrCmd", s:pink, s:black, "NONE")
" call s:Color("vimWarn", s:white, s:black, "NONE")

" misc

call s:Color("ColorColumn", s:white, s:black, "NONE")
call s:Color("Conceal", s:white, s:black, "NONE")
call s:Color("Cursor", s:white, s:black, "NONE")
call s:Color("lCursor", s:white, s:black, "NONE")
call s:Color("CursorIM", s:white, s:black, "NONE")
call s:Color("CursorColumn", s:white, s:black, "NONE")
call s:Color("CursorLine", s:white, s:black, "NONE")
call s:Color("Directory", s:white, s:black, "NONE")
call s:Color("DiffAdd", s:white, s:black, "NONE")
call s:Color("DiffChange", s:white, s:black, "NONE")
call s:Color("DiffDelete", s:white, s:black, "NONE")
call s:Color("DiffText", s:white, s:black, "NONE")
call s:Color("EndOfBuffer", s:white, s:black, "NONE")
call s:Color("ErrorMsg", s:white, s:black, "NONE")
call s:Color("VertSplit", s:white, s:black, "NONE")
call s:Color("Folded", s:white, s:black, "NONE")
call s:Color("FoldColumn", s:white, s:black, "NONE")
call s:Color("SignColumn", s:white, s:black, "NONE")
call s:Color("IncSearch", s:pink, s:dark_gray, "NONE")
call s:Color("LineNr", s:white, s:black, "NONE")
call s:Color("LineNrAbove", s:white, s:black, "NONE")
call s:Color("LineNrBelow", s:white, s:black, "NONE")
call s:Color("CursorLineNr", s:pink, s:black, "NONE")
call s:Color("MatchParen", s:white, s:black, "NONE")
call s:Color("ModeMsg", s:white, s:black, "NONE")
call s:Color("MoreMsg", s:white, s:black, "NONE")
call s:Color("NonText", s:white, s:black, "NONE")
call s:Color("Pmenu", s:white, s:black, "NONE")
call s:Color("PmenuSel", s:white, s:black, "NONE")
call s:Color("PmenuSbar", s:white, s:black, "NONE")
call s:Color("PmenuThumb", s:white, s:black, "NONE")
call s:Color("Question", s:white, s:black, "NONE")
call s:Color("QuickFixLine", s:white, s:black, "NONE")
call s:Color("Search", s:pink, s:dark_gray, "NONE")
call s:Color("SpecialKey", s:white, s:black, "NONE")
call s:Color("SpellBad", s:white, s:black, "NONE")
call s:Color("SpellCap", s:white, s:black, "NONE")
call s:Color("SpellLocal", s:white, s:black, "NONE")
call s:Color("SpellRare", s:white, s:black, "NONE")
call s:Color("StatusLine", s:white, s:black, "NONE")
call s:Color("StatusLineNC", s:white, s:black, "NONE")
call s:Color("StatusLineTerm", s:white, s:black, "NONE")
call s:Color("StatusLineTermNC", s:white, s:black, "NONE")
call s:Color("TabLine", s:white, s:black, "NONE")
call s:Color("TabLineFill", s:white, s:black, "NONE")
call s:Color("TabLineSel", s:white, s:black, "NONE")
call s:Color("Terminal", s:white, s:black, "NONE")
call s:Color("Title", s:white, s:black, "NONE")
call s:Color("Visual", s:pink, s:dark_gray, "NONE")
call s:Color("VisualNOS", s:yellow, s:black, "NONE")
call s:Color("WarningMsg", s:white, s:black, "NONE")
call s:Color("WildMenu", s:white, s:black, "NONE")

" major

call s:Color("Normal", s:white, s:black, "NONE")
call s:Color("Comment", s:light_gray, s:black, "NONE")
call s:Color("Constant", s:mint, s:black, "NONE")
call s:Color("Identifier", s:teal, s:black, "NONE")
call s:Color("Statement", s:teal, s:black, "NONE")
call s:Color("PreProc", s:white, s:black, "NONE")
call s:Color("Type", s:mint, s:black, "NONE")
call s:Color("Special", s:teal, s:black, "NONE")
call s:Color("Underlined", s:white, s:black, "NONE")
call s:Color("Ignore", s:violet, s:black, "NONE")
call s:Color("Error", s:violet, s:black, "NONE")
call s:Color("Todo", s:yellow, s:black, "NONE")

" minor

call s:Color("String", s:mint, s:black, "NONE")
call s:Color("Character", s:mint, s:black, "NONE")
call s:Color("Number", s:mint, s:black, "NONE")
call s:Color("Boolean", s:mint, s:black, "NONE")
call s:Color("Float", s:mint, s:black, "NONE")
call s:Color("Function", s:white, s:black, "NONE")
call s:Color("Conditional", s:pink, s:black, "NONE")
call s:Color("Repeat", s:teal, s:black, "NONE")
call s:Color("Label", s:teal, s:black, "NONE")
call s:Color("Operator", s:white, s:black, "NONE")
call s:Color("Keyword", s:pink, s:black, "NONE")
call s:Color("Exception", s:teal, s:black, "NONE")
call s:Color("Include", s:teal, s:black, "NONE")
call s:Color("Define", s:teal, s:black, "NONE")
call s:Color("Macro", s:teal, s:black, "NONE")
call s:Color("PreCondit", s:yellow, s:black, "NONE")
call s:Color("StorageClass", s:mint, s:black, "NONE")
call s:Color("Structure", s:mint, s:black, "NONE")
call s:Color("Typedef", s:mint, s:black, "NONE")
call s:Color("SpecialChar", s:yellow, s:black, "NONE")
call s:Color("Tag", s:yellow, s:black, "NONE")
call s:Color("Delimiter", s:white, s:black, "NONE")
call s:Color("SpecialComment", s:yellow, s:black, "NONE")
call s:Color("Debug", s:yellow, s:black, "NONE")

" plugins

call s:Color("QuickScopePrimary", s:pink, s:dark_gray, "underline")
call s:Color("QuickScopeSecondary", s:pink, s:dark_gray, "underline")
call s:Color("FloatBorder", s:pink, s:black, "NONE")

" lsp stuff
call s:Color("DiagnosticError", s:pink, s:black, "NONE")
call s:Color("DiagnosticWarn", s:mint, s:black, "NONE")
call s:Color("DiagnosticInfo", s:teal, s:black, "NONE")
call s:Color("DiagnosticHint", s:yellow, s:black, "NONE")
call s:Color("DiagnosticFloatingError", s:white, s:black, "NONE")
call s:Color("DiagnosticFloatingWarn", s:white, s:black, "NONE")
call s:Color("DiagnosticFloatingInfo", s:white, s:black, "NONE")
call s:Color("DiagnosticFloatingHint", s:white, s:black, "NONE")
" call s:Color("DiagnosticSignError", s:pink, s:black, "NONE")
" call s:Color("DiagnosticSignWarn", s:mint, s:black, "NONE")
" call s:Color("DiagnosticSignInfo", s:teal, s:black, "NONE")
" call s:Color("DiagnosticSignHint", s:yellow, s:black, "NONE")
" call s:Color("DiagnosticVirtualTextError", s:pink, s:black, "NONE")
" call s:Color("DiagnosticVirtualTextWarn", s:mint, s:black, "NONE")
" call s:Color("DiagnosticVirtualTextInfo", s:teal, s:black, "NONE")
" call s:Color("DiagnosticVirtualTextHint", s:yellow, s:black, "NONE")
" call s:Color("DiagnosticUnderlineError", s:pink, s:black, "NONE")
" call s:Color("DiagnosticUnderlineWarn", s:mint, s:black, "NONE")
" call s:Color("DiagnosticUnderlineInfo", s:teal, s:black, "NONE")
" call s:Color("DiagnosticUnderlineHint", s:yellow, s:black, "NONE")

" treesitter 

call s:Color("@error", s:white, s:black, "NONE")
call s:Color("@punctdelimiter", s:white, s:black, "NONE")
call s:Color("@punctbracket", s:white, s:black, "NONE")
call s:Color("@punctspecial", s:white, s:black, "NONE")
call s:Color("@constant", s:white, s:black, "NONE")
call s:Color("@constbuiltin", s:white, s:black, "NONE")
call s:Color("@constmacro", s:white, s:black, "NONE")
call s:Color("@stringregex", s:white, s:black, "NONE")
call s:Color("@string", s:mint, s:black, "NONE")
call s:Color("@stringescape", s:white, s:black, "NONE")
call s:Color("@character", s:white, s:black, "NONE")
call s:Color("@number", s:mint, s:black, "NONE")
call s:Color("@boolean", s:white, s:black, "NONE")
call s:Color("@float", s:white, s:black, "NONE")
call s:Color("@annotation", s:white, s:black, "NONE")
call s:Color("@attribute", s:white, s:black, "NONE")
call s:Color("@namespace", s:white, s:black, "NONE")
call s:Color("@funcbuiltin", s:white, s:black, "NONE")
call s:Color("@function", s:white, s:black, "NONE")
call s:Color("@funcmacro", s:white, s:black, "NONE")
call s:Color("@parameter", s:white, s:black, "NONE")
call s:Color("@parameterreference", s:white, s:black, "NONE")
call s:Color("@method", s:white, s:black, "NONE")
call s:Color("@field", s:white, s:black, "NONE")
call s:Color("@property", s:teal, s:black, "NONE")
call s:Color("@constructor", s:white, s:black, "NONE")
call s:Color("@conditional", s:white, s:black, "NONE")
call s:Color("@repeat", s:white, s:black, "NONE")
call s:Color("@label", s:white, s:black, "NONE")
call s:Color("@keyword", s:white, s:black, "NONE")
call s:Color("@keyword.function", s:white, s:black, "NONE")
call s:Color("@keyword.operator", s:white, s:black, "NONE")
call s:Color("@operator", s:white, s:black, "NONE")
call s:Color("@exception", s:white, s:black, "NONE")
call s:Color("@type", s:mint, s:black, "NONE")
call s:Color("@typebuiltin", s:white, s:black, "NONE")
call s:Color("@structure", s:white, s:black, "NONE")
call s:Color("@include", s:teal, s:black, "NONE")
call s:Color("@variable", s:white, s:black, "NONE")
call s:Color("@variablebuiltin", s:white, s:black, "NONE")
call s:Color("@text", s:white, s:black, "NONE")
call s:Color("@strong", s:white, s:black, "NONE")
call s:Color("@emphasis", s:white, s:black, "NONE")
call s:Color("@underline", s:white, s:black, "NONE")
call s:Color("@title", s:white, s:black, "NONE")
call s:Color("@literal", s:white, s:black, "NONE")
call s:Color("@uri", s:white, s:black, "NONE")
call s:Color("@constant.builtin", s:white, s:black, "NONE")
call s:Color("@tag", s:teal, s:black, "NONE")
call s:Color("@tag.attribute", s:pink, s:black, "NONE")
call s:Color("@tag.delimiter", s:white, s:black, "NONE")
call s:Color("@none", s:white, s:black, "NONE")
call s:Color("@spell", s:mint, s:black, "NONE")

